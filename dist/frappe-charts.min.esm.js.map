{"version":3,"file":"frappe-charts.min.esm.js","sources":["../src/js/utils/dom.js","../src/js/utils/constants.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/colors.js","../src/js/utils/draw.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/utils/export.js","../src/js/utils/date-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/css/chartsCss.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js"],"sourcesContent":["export function $(expr, con) {\r\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\r\n}\r\n\r\nexport function findNodeIndex(node)\r\n{\r\n\tvar i = 0;\r\n\twhile (node.previousSibling) {\r\n\t\tnode = node.previousSibling;\r\n\t\ti++;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n$.create = (tag, o) => {\r\n\tvar element = document.createElement(tag);\r\n\r\n\tfor (var i in o) {\r\n\t\tvar val = o[i];\r\n\r\n\t\tif (i === \"inside\") {\r\n\t\t\t$(val).appendChild(element);\r\n\t\t}\r\n\t\telse if (i === \"around\") {\r\n\t\t\tvar ref = $(val);\r\n\t\t\tref.parentNode.insertBefore(element, ref);\r\n\t\t\telement.appendChild(ref);\r\n\r\n\t\t} else if (i === \"styles\") {\r\n\t\t\tif(typeof val === \"object\") {\r\n\t\t\t\tObject.keys(val).map(prop => {\r\n\t\t\t\t\telement.style[prop] = val[prop];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (i in element ) {\r\n\t\t\telement[i] = val;\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(i, val);\r\n\t\t}\r\n\t}\r\n\r\n\treturn element;\r\n};\r\n\r\nexport function getOffset(element) {\r\n\tlet rect = element.getBoundingClientRect();\r\n\treturn {\r\n\t\t// https://stackoverflow.com/a/7436602/6495043\r\n\t\t// rect.top varies with scroll, so we add whatever has been\r\n\t\t// scrolled to it to get absolute distance from actual page top\r\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\r\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\r\n\t};\r\n}\r\n\r\nexport function isElementInViewport(el) {\r\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\r\n\tvar rect = el.getBoundingClientRect();\r\n\r\n\treturn (\r\n\t\trect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\r\n\t);\r\n}\r\n\r\nexport function getElementContentWidth(element) {\r\n\tvar styles = window.getComputedStyle(element);\r\n\tvar padding = parseFloat(styles.paddingLeft) +\r\n\t\tparseFloat(styles.paddingRight);\r\n\r\n\treturn element.clientWidth - padding;\r\n}\r\n\r\nexport function bind(element, o){\r\n\tif (element) {\r\n\t\tfor (var event in o) {\r\n\t\t\tvar callback = o[event];\r\n\r\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\r\n\t\t\t\telement.addEventListener(event, callback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function unbind(element, o){\r\n\tif (element) {\r\n\t\tfor (var event in o) {\r\n\t\t\tvar callback = o[event];\r\n\r\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\r\n\t\t\t\telement.removeEventListener(event, callback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function fire(target, type, properties) {\r\n\tvar evt = document.createEvent(\"HTMLEvents\");\r\n\r\n\tevt.initEvent(type, true, true );\r\n\r\n\tfor (var j in properties) {\r\n\t\tevt[j] = properties[j];\r\n\t}\r\n\r\n\treturn target.dispatchEvent(evt);\r\n}\r\n\r\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\r\nexport function forEachNode(nodeList, callback, scope) {\r\n\tif(!nodeList) return;\r\n\tfor (var i = 0; i < nodeList.length; i++) {\r\n\t\tcallback.call(scope, nodeList[i], i);\r\n\t}\r\n}\r\n\r\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\r\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\r\n\r\n\tforEachNode($children, (node, i) => {\r\n\t\tif(index >= 0 && i <= index) return;\r\n\t\tnode.classList.remove(activeClass);\r\n\t});\r\n\r\n\t$child.classList.add(activeClass);\r\n}\r\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\r\n\r\nexport const COMPATIBLE_CHARTS = {\r\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\r\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\r\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\r\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\r\n\theatmap: []\r\n};\r\n\r\nexport const DATA_COLOR_DIVISIONS = {\r\n\tbar: 'datasets',\r\n\tline: 'datasets',\r\n\tpie: 'labels',\r\n\tpercentage: 'labels',\r\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\r\n};\r\n\r\nexport const BASE_MEASURES = {\r\n\tmargins: {\r\n\t\ttop: 10,\r\n\t\tbottom: 10,\r\n\t\tleft: 20,\r\n\t\tright: 20\r\n\t},\r\n\tpaddings: {\r\n\t\ttop: 20,\r\n\t\tbottom: 40,\r\n\t\tleft: 30,\r\n\t\tright: 10\r\n\t},\r\n\r\n\tbaseHeight: 240,\r\n\ttitleHeight: 20,\r\n\tlegendHeight: 30,\r\n\r\n\ttitleFontSize: 12,\r\n};\r\n\r\nexport function getTopOffset(m) {\r\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\r\n}\r\n\r\nexport function getLeftOffset(m) {\r\n\treturn m.margins.left + m.paddings.left;\r\n}\r\n\r\nexport function getExtraHeight(m) {\r\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\r\n\t\t+ m.paddings.top + m.paddings.bottom\r\n\t\t+ m.titleHeight + m.legendHeight;\r\n\treturn totalExtraHeight;\r\n}\r\n\r\nexport function getExtraWidth(m) {\r\n\tlet totalExtraWidth = m.margins.left + m.margins.right\r\n\t\t+ m.paddings.left + m.paddings.right;\r\n\r\n\treturn totalExtraWidth;\r\n}\r\n\r\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\r\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\r\n\r\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\r\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\r\n\r\nexport const AXIS_LEGEND_BAR_SIZE = 100;\r\n\r\nexport const BAR_CHART_SPACE_RATIO = 0.5;\r\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\r\n\r\nexport const LINE_CHART_DOT_SIZE = 4;\r\nexport const DOT_OVERLAY_SIZE_INCR = 4;\r\n\r\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\r\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\r\n\r\n// Fixed 5-color theme,\r\n// More colors are difficult to parse visually\r\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\r\n\r\nexport const HEATMAP_SQUARE_SIZE = 10;\r\nexport const HEATMAP_GUTTER_SIZE = 2;\r\n\r\nexport const DEFAULT_CHAR_WIDTH = 7;\r\n\r\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\r\n\r\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\r\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\r\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\r\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\r\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\r\n\r\nexport const DEFAULT_COLORS = {\r\n\tbar: DEFAULT_CHART_COLORS,\r\n\tline: DEFAULT_CHART_COLORS,\r\n\tpie: DEFAULT_CHART_COLORS,\r\n\tpercentage: DEFAULT_CHART_COLORS,\r\n\theatmap: HEATMAP_COLORS_GREEN\r\n};\r\n\r\n// Universal constants\r\nexport const ANGLE_RATIO = Math.PI / 180;\r\nexport const FULL_ANGLE = 360;\r\n","import { ANGLE_RATIO } from './constants';\r\n\r\n/**\r\n * Returns the value of a number upto 2 decimal places.\r\n * @param {Number} d Any number\r\n */\r\nexport function floatTwo(d) {\r\n\treturn parseFloat(d.toFixed(2));\r\n}\r\n\r\n/**\r\n * Returns whether or not two given arrays are equal.\r\n * @param {Array} arr1 First array\r\n * @param {Array} arr2 Second array\r\n */\r\nexport function arraysEqual(arr1, arr2) {\r\n\tif(arr1.length !== arr2.length) return false;\r\n\tlet areEqual = true;\r\n\tarr1.map((d, i) => {\r\n\t\tif(arr2[i] !== d) areEqual = false;\r\n\t});\r\n\treturn areEqual;\r\n}\r\n\r\n/**\r\n * Shuffles array in place. ES6 version\r\n * @param {Array} array An array containing the items.\r\n */\r\nexport function shuffle(array) {\r\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\r\n\t// https://stackoverflow.com/a/2450976/6495043\r\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\r\n\r\n\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\tlet j = Math.floor(Math.random() * (i + 1));\r\n\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Fill an array with extra points\r\n * @param {Array} array Array\r\n * @param {Number} count number of filler elements\r\n * @param {Object} element element to fill with\r\n * @param {Boolean} start fill at start?\r\n */\r\nexport function fillArray(array, count, element, start=false) {\r\n\tif(!element) {\r\n\t\telement = start ? array[0] : array[array.length - 1];\r\n\t}\r\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\r\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Returns pixel width of string.\r\n * @param {String} string\r\n * @param {Number} charWidth Width of single char in pixels\r\n */\r\nexport function getStringWidth(string, charWidth) {\r\n\treturn (string+\"\").length * charWidth;\r\n}\r\n\r\nexport function bindChange(obj, getFn, setFn) {\r\n\treturn new Proxy(obj, {\r\n\t\tset: function(target, prop, value) {\r\n\t\t\tsetFn();\r\n\t\t\treturn Reflect.set(target, prop, value);\r\n\t\t},\r\n\t\tget: function(target, prop) {\r\n\t\t\tgetFn();\r\n\t\t\treturn Reflect.get(target, prop);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// https://stackoverflow.com/a/29325222\r\nexport function getRandomBias(min, max, bias, influence) {\r\n\tconst range = max - min;\r\n\tconst biasValue = range * bias + min;\r\n\tvar rnd = Math.random() * range + min,\t\t// random in range\r\n\t\tmix = Math.random() * influence;\t\t// random mixer\r\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\r\n}\r\n\r\nexport function getPositionByAngle(angle, radius) {\r\n\treturn {\r\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\r\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\r\n\t};\r\n}\r\n","import { fillArray } from './helpers';\r\n\r\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\r\n\tlet height, y;\r\n\tif (yTop <= zeroLine) {\r\n\t\theight = zeroLine - yTop;\r\n\t\ty = yTop;\r\n\t} else {\r\n\t\theight = yTop - zeroLine;\r\n\t\ty = zeroLine;\r\n\t}\r\n\r\n\treturn [height, y];\r\n}\r\n\r\nexport function equilizeNoOfElements(array1, array2,\r\n\textraCount = array2.length - array1.length) {\r\n\r\n\t// Doesn't work if either has zero elements.\r\n\tif(extraCount > 0) {\r\n\t\tarray1 = fillArray(array1, extraCount);\r\n\t} else {\r\n\t\tarray2 = fillArray(array2, extraCount);\r\n\t}\r\n\treturn [array1, array2];\r\n}\r\n","const PRESET_COLOR_MAP = {\r\n\t'light-blue': '#7cd6fd',\r\n\t'blue': '#5e64ff',\r\n\t'violet': '#743ee2',\r\n\t'red': '#ff5858',\r\n\t'orange': '#ffa00a',\r\n\t'yellow': '#feef72',\r\n\t'green': '#28a745',\r\n\t'light-green': '#98d85b',\r\n\t'purple': '#b554ff',\r\n\t'magenta': '#ffa3ef',\r\n\t'black': '#36114C',\r\n\t'grey': '#bdd3e6',\r\n\t'light-grey': '#f0f4f7',\r\n\t'dark-grey': '#b8c2cc'\r\n};\r\n\r\nfunction limitColor(r){\r\n\tif (r > 255) return 255;\r\n\telse if (r < 0) return 0;\r\n\treturn r;\r\n}\r\n\r\nexport function lightenDarkenColor(color, amt) {\r\n\tlet col = getColor(color);\r\n\tlet usePound = false;\r\n\tif (col[0] == \"#\") {\r\n\t\tcol = col.slice(1);\r\n\t\tusePound = true;\r\n\t}\r\n\tlet num = parseInt(col,16);\r\n\tlet r = limitColor((num >> 16) + amt);\r\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\r\n\tlet g = limitColor((num & 0x0000FF) + amt);\r\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\nexport function isValidColor(string) {\r\n\t// https://stackoverflow.com/a/8027444/6495043\r\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\r\n}\r\n\r\nexport const getColor = (color) => {\r\n\treturn PRESET_COLOR_MAP[color] || color;\r\n};\r\n","import { getBarHeightAndYAttr } from './draw-utils';\r\nimport { getStringWidth } from './helpers';\r\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\r\nimport { lightenDarkenColor } from './colors';\r\n\r\nexport const AXIS_TICK_LENGTH = 6;\r\nconst LABEL_MARGIN = 4;\r\nexport const FONT_SIZE = 10;\r\nconst BASE_LINE_COLOR = '#dadada';\r\nconst FONT_FILL = '#555b51';\r\n\r\nfunction $(expr, con) {\r\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, o) {\r\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\r\n\r\n\tfor (var i in o) {\r\n\t\tvar val = o[i];\r\n\r\n\t\tif (i === \"inside\") {\r\n\t\t\t$(val).appendChild(element);\r\n\t\t}\r\n\t\telse if (i === \"around\") {\r\n\t\t\tvar ref = $(val);\r\n\t\t\tref.parentNode.insertBefore(element, ref);\r\n\t\t\telement.appendChild(ref);\r\n\r\n\t\t} else if (i === \"styles\") {\r\n\t\t\tif(typeof val === \"object\") {\r\n\t\t\t\tObject.keys(val).map(prop => {\r\n\t\t\t\t\telement.style[prop] = val[prop];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(i === \"className\") { i = \"class\"; }\r\n\t\t\tif(i === \"innerHTML\") {\r\n\t\t\t\telement['textContent'] = val;\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(i, val);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn element;\r\n}\r\n\r\nfunction renderVerticalGradient(svgDefElem, gradientId) {\r\n\treturn createSVG('linearGradient', {\r\n\t\tinside: svgDefElem,\r\n\t\tid: gradientId,\r\n\t\tx1: 0,\r\n\t\tx2: 0,\r\n\t\ty1: 0,\r\n\t\ty2: 1\r\n\t});\r\n}\r\n\r\nfunction setGradientStop(gradElem, offset, color, opacity) {\r\n\treturn createSVG('stop', {\r\n\t\t'inside': gradElem,\r\n\t\t'style': `stop-color: ${color}`,\r\n\t\t'offset': offset,\r\n\t\t'stop-opacity': opacity\r\n\t});\r\n}\r\n\r\nexport function makeSVGContainer(parent, className, width, height) {\r\n\treturn createSVG('svg', {\r\n\t\tclassName: className,\r\n\t\tinside: parent,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n}\r\n\r\nexport function makeSVGDefs(svgContainer) {\r\n\treturn createSVG('defs', {\r\n\t\tinside: svgContainer,\r\n\t});\r\n}\r\n\r\nexport function makeSVGGroup(className, transform='', parent=undefined) {\r\n\tlet args = {\r\n\t\tclassName: className,\r\n\t\ttransform: transform\r\n\t};\r\n\tif(parent) args.inside = parent;\r\n\treturn createSVG('g', args);\r\n}\r\n\r\nexport function wrapInSVGGroup(elements, className='') {\r\n\tlet g = createSVG('g', {\r\n\t\tclassName: className\r\n\t});\r\n\telements.forEach(e => g.appendChild(e));\r\n\treturn g;\r\n}\r\n\r\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\r\n\treturn createSVG('path', {\r\n\t\tclassName: className,\r\n\t\td: pathStr,\r\n\t\tstyles: {\r\n\t\t\tstroke: stroke,\r\n\t\t\tfill: fill\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\r\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\r\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\r\n\r\n\treturn `M${center.x} ${center.y}\r\n\t\tL${arcStartX} ${arcStartY}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${arcEndY} z`;\r\n}\r\n\r\nexport function makeGradient(svgDefElem, color, lighter = false) {\r\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\r\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\r\n\tlet opacities = [1, 0.6, 0.2];\r\n\tif(lighter) {\r\n\t\topacities = [0.4, 0.2, 0];\r\n\t}\r\n\r\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\r\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\r\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\r\n\r\n\treturn gradientId;\r\n}\r\n\r\nexport function percentageBar(x, y, width, height,\r\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\r\n\r\n\tlet args = {\r\n\t\tclassName: 'percentage-bar',\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tfill: fill,\r\n\t\tstyles: {\r\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\r\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\r\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\r\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\r\n\t\t\t'stroke-width': depth\r\n\t\t},\r\n\t};\r\n\r\n\treturn createSVG(\"rect\", args);\r\n}\r\n\r\nexport function heatSquare(className, x, y, size, fill='none', data={}) {\r\n\tlet args = {\r\n\t\tclassName: className,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: size,\r\n\t\theight: size,\r\n\t\tfill: fill\r\n\t};\r\n\r\n\tObject.keys(data).map(key => {\r\n\t\targs[key] = data[key];\r\n\t});\r\n\r\n\treturn createSVG(\"rect\", args);\r\n}\r\n\r\nexport function legendBar(x, y, size, fill='none', label) {\r\n\tlet args = {\r\n\t\tclassName: 'legend-bar',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: size,\r\n\t\theight: '2px',\r\n\t\tfill: fill\r\n\t};\r\n\tlet text = createSVG('text', {\r\n\t\tclassName: 'legend-dataset-text',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE * 2) + 'px',\r\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tfill: FONT_FILL,\r\n\t\tinnerHTML: label\r\n\t});\r\n\r\n\tlet group = createSVG('g', {\r\n\t\ttransform: `translate(${x}, ${y})`\r\n\t});\r\n\tgroup.appendChild(createSVG(\"rect\", args));\r\n\tgroup.appendChild(text);\r\n\r\n\treturn group;\r\n}\r\n\r\nexport function legendDot(x, y, size, fill='none', label) {\r\n\tlet args = {\r\n\t\tclassName: 'legend-dot',\r\n\t\tcx: 0,\r\n\t\tcy: 0,\r\n\t\tr: size,\r\n\t\tfill: fill\r\n\t};\r\n\tlet text = createSVG('text', {\r\n\t\tclassName: 'legend-dataset-text',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdx: (FONT_SIZE) + 'px',\r\n\t\tdy: (FONT_SIZE/3) + 'px',\r\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tfill: FONT_FILL,\r\n\t\tinnerHTML: label\r\n\t});\r\n\r\n\tlet group = createSVG('g', {\r\n\t\ttransform: `translate(${x}, ${y})`\r\n\t});\r\n\tgroup.appendChild(createSVG(\"circle\", args));\r\n\tgroup.appendChild(text);\r\n\r\n\treturn group;\r\n}\r\n\r\nexport function makeText(className, x, y, content, options = {}) {\r\n\tlet fontSize = options.fontSize || FONT_SIZE;\r\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\r\n\tlet fill = options.fill || FONT_FILL;\r\n\tlet textAnchor = options.textAnchor || 'start';\r\n\treturn createSVG('text', {\r\n\t\tclassName: className,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tdy: dy + 'px',\r\n\t\t'font-size': fontSize + 'px',\r\n\t\tfill: fill,\r\n\t\t'text-anchor': textAnchor,\r\n\t\tinnerHTML: content\r\n\t});\r\n}\r\n\r\nfunction makeVertLine(x, label, y1, y2, options={}) {\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tlet l = createSVG('line', {\r\n\t\tclassName: 'line-vertical ' + options.className,\r\n\t\tx1: 0,\r\n\t\tx2: 0,\r\n\t\ty1: y1,\r\n\t\ty2: y2,\r\n\t\tstyles: {\r\n\t\t\tstroke: options.stroke\r\n\t\t}\r\n\t});\r\n\r\n\tlet text = createSVG('text', {\r\n\t\tx: 0,\r\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\r\n\t\tdy: FONT_SIZE + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'middle',\r\n\t\tinnerHTML: label + \"\"\r\n\t});\r\n\r\n\tlet line = createSVG('g', {\r\n\t\ttransform: `translate(${ x }, 0)`\r\n\t});\r\n\r\n\tline.appendChild(l);\r\n\tline.appendChild(text);\r\n\r\n\treturn line;\r\n}\r\n\r\nfunction makeHoriLine(y, label, x1, x2, options={}) {\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.lineType) options.lineType = '';\r\n\tlet className = 'line-horizontal ' + options.className +\r\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\r\n\r\n\tlet l = createSVG('line', {\r\n\t\tclassName: className,\r\n\t\tx1: x1,\r\n\t\tx2: x2,\r\n\t\ty1: 0,\r\n\t\ty2: 0,\r\n\t\tstyles: {\r\n\t\t\tstroke: options.stroke\r\n\t\t}\r\n\t});\r\n\r\n\tlet text = createSVG('text', {\r\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet line = createSVG('g', {\r\n\t\ttransform: `translate(0, ${y})`,\r\n\t\t'stroke-opacity': 1\r\n\t});\r\n\r\n\tif(text === 0 || text === '0') {\r\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\r\n\t}\r\n\r\n\tline.appendChild(l);\r\n\tline.appendChild(text);\r\n\r\n\treturn line;\r\n}\r\n\r\nexport function yLine(y, label, width, options={}) {\r\n\tif(!options.pos) options.pos = 'left';\r\n\tif(!options.offset) options.offset = 0;\r\n\tif(!options.mode) options.mode = 'span';\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.className) options.className = '';\r\n\r\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\r\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\r\n\r\n\tif(options.mode === 'tick' && options.pos === 'right') {\r\n\t\tx1 = width + AXIS_TICK_LENGTH;\r\n\t\tx2 = width;\r\n\t}\r\n\r\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\r\n\r\n\tx1 += options.offset;\r\n\tx2 += options.offset;\r\n\r\n\treturn makeHoriLine(y, label, x1, x2, {\r\n\t\tstroke: options.stroke,\r\n\t\tclassName: options.className,\r\n\t\tlineType: options.lineType\r\n\t});\r\n}\r\n\r\nexport function xLine(x, label, height, options={}) {\r\n\tif(!options.pos) options.pos = 'bottom';\r\n\tif(!options.offset) options.offset = 0;\r\n\tif(!options.mode) options.mode = 'span';\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.className) options.className = '';\r\n\r\n\t// Draw X axis line in span/tick mode with optional label\r\n\t//                        \ty2(span)\r\n\t// \t\t\t\t\t\t|\r\n\t// \t\t\t\t\t\t|\r\n\t//\t\t\t\tx line\t|\r\n\t//\t\t\t\t\t\t|\r\n\t// \t\t\t\t\t   \t|\r\n\t// ---------------------+-- y2(tick)\r\n\t//\t\t\t\t\t\t|\r\n\t//\t\t\t\t\t\t\ty1\r\n\r\n\tlet y1 = height + AXIS_TICK_LENGTH;\r\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\r\n\r\n\tif(options.mode === 'tick' && options.pos === 'top') {\r\n\t\t// top axis ticks\r\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\r\n\t\ty2 = 0;\r\n\t}\r\n\r\n\treturn makeVertLine(x, label, y1, y2, {\r\n\t\tstroke: options.stroke,\r\n\t\tclassName: options.className,\r\n\t\tlineType: options.lineType\r\n\t});\r\n}\r\n\r\nexport function yMarker(y, label, width, options={}) {\r\n\tif(!options.labelPos) options.labelPos = 'right';\r\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\r\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\r\n\r\n\tlet labelSvg = createSVG('text', {\r\n\t\tclassName: 'chart-label',\r\n\t\tx: x,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / -2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet line = makeHoriLine(y, '', 0, width, {\r\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\r\n\t\tclassName: options.className || '',\r\n\t\tlineType: options.lineType\r\n\t});\r\n\r\n\tline.appendChild(labelSvg);\r\n\r\n\treturn line;\r\n}\r\n\r\nexport function yRegion(y1, y2, width, label, options={}) {\r\n\t// return a group\r\n\tlet height = y1 - y2;\r\n\r\n\tlet rect = createSVG('rect', {\r\n\t\tclassName: `bar mini`, // remove class\r\n\t\tstyles: {\r\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\r\n\t\t\tstroke: BASE_LINE_COLOR,\r\n\t\t\t'stroke-dasharray': `${width}, ${height}`\r\n\t\t},\r\n\t\t// 'data-point-index': index,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n\r\n\tif(!options.labelPos) options.labelPos = 'right';\r\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\r\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\r\n\r\n\tlet labelSvg = createSVG('text', {\r\n\t\tclassName: 'chart-label',\r\n\t\tx: x,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / -2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet region = createSVG('g', {\r\n\t\ttransform: `translate(0, ${y2})`\r\n\t});\r\n\r\n\tregion.appendChild(rect);\r\n\tregion.appendChild(labelSvg);\r\n\r\n\treturn region;\r\n}\r\n\r\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\r\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\r\n\ty -= offset;\r\n\r\n\tif(height === 0) {\r\n\t\theight = meta.minHeight;\r\n\t\ty -= meta.minHeight;\r\n\t}\r\n\r\n\tlet rect = createSVG('rect', {\r\n\t\tclassName: `bar mini`,\r\n\t\tstyle: `fill: ${color}`,\r\n\t\t'data-point-index': index,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n\r\n\tlabel += \"\";\r\n\r\n\tif(!label && !label.length) {\r\n\t\treturn rect;\r\n\t} else {\r\n\t\trect.setAttribute('y', 0);\r\n\t\trect.setAttribute('x', 0);\r\n\t\tlet text = createSVG('text', {\r\n\t\t\tclassName: 'data-point-value',\r\n\t\t\tx: width/2,\r\n\t\t\ty: 0,\r\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\r\n\t\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t\t'text-anchor': 'middle',\r\n\t\t\tinnerHTML: label\r\n\t\t});\r\n\r\n\t\tlet group = createSVG('g', {\r\n\t\t\t'data-point-index': index,\r\n\t\t\ttransform: `translate(${x}, ${y})`\r\n\t\t});\r\n\t\tgroup.appendChild(rect);\r\n\t\tgroup.appendChild(text);\r\n\r\n\t\treturn group;\r\n\t}\r\n}\r\n\r\nexport function datasetDot(x, y, radius, color, label='', index=0) {\r\n\tlet dot = createSVG('circle', {\r\n\t\tstyle: `fill: ${color}`,\r\n\t\t'data-point-index': index,\r\n\t\tcx: x,\r\n\t\tcy: y,\r\n\t\tr: radius\r\n\t});\r\n\r\n\tlabel += \"\";\r\n\r\n\tif(!label && !label.length) {\r\n\t\treturn dot;\r\n\t} else {\r\n\t\tdot.setAttribute('cy', 0);\r\n\t\tdot.setAttribute('cx', 0);\r\n\r\n\t\tlet text = createSVG('text', {\r\n\t\t\tclassName: 'data-point-value',\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\r\n\t\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t\t'text-anchor': 'middle',\r\n\t\t\tinnerHTML: label\r\n\t\t});\r\n\r\n\t\tlet group = createSVG('g', {\r\n\t\t\t'data-point-index': index,\r\n\t\t\ttransform: `translate(${x}, ${y})`\r\n\t\t});\r\n\t\tgroup.appendChild(dot);\r\n\t\tgroup.appendChild(text);\r\n\r\n\t\treturn group;\r\n\t}\r\n}\r\n\r\nexport function getPaths(xList, yList, color, options={}, meta={}) {\r\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\r\n\tlet pointsStr = pointsList.join(\"L\");\r\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\r\n\r\n\t// HeatLine\r\n\tif(options.heatline) {\r\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\r\n\t\tpath.style.stroke = `url(#${gradient_id})`;\r\n\t}\r\n\r\n\tlet paths = {\r\n\t\tpath: path\r\n\t};\r\n\r\n\t// Region\r\n\tif(options.regionFill) {\r\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\r\n\r\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\r\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\r\n\t}\r\n\r\n\treturn paths;\r\n}\r\n\r\nexport let makeOverlay = {\r\n\t'bar': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'rect') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\toverlay.style.fill = '#000000';\r\n\t\toverlay.style.opacity = '0.4';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t},\r\n\r\n\t'dot': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\tlet radius = unit.getAttribute('r');\r\n\t\tlet fill = unit.getAttribute('fill');\r\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\r\n\t\toverlay.setAttribute('fill', fill);\r\n\t\toverlay.style.opacity = '0.6';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t},\r\n\r\n\t'heat_square': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\tlet radius = unit.getAttribute('r');\r\n\t\tlet fill = unit.getAttribute('fill');\r\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\r\n\t\toverlay.setAttribute('fill', fill);\r\n\t\toverlay.style.opacity = '0.6';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t}\r\n};\r\n\r\nexport let updateOverlay = {\r\n\t'bar': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'rect') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n\r\n\t'dot': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['cx', 'cy'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n\r\n\t'heat_square': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['cx', 'cy'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n};\r\n","import { getBarHeightAndYAttr } from './draw-utils';\r\n\r\nexport const UNIT_ANIM_DUR = 350;\r\nexport const PATH_ANIM_DUR = 350;\r\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\r\nexport const REPLACE_ALL_NEW_DUR = 250;\r\n\r\nexport const STD_EASING = 'easein';\r\n\r\nexport function translate(unit, oldCoord, newCoord, duration) {\r\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\r\n\treturn [\r\n\t\tunit,\r\n\t\t{transform: newCoord.join(', ')},\r\n\t\tduration,\r\n\t\tSTD_EASING,\r\n\t\t\"translate\",\r\n\t\t{transform: old}\r\n\t];\r\n}\r\n\r\nexport function translateVertLine(xLine, newX, oldX) {\r\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\r\n}\r\n\r\nexport function translateHoriLine(yLine, newY, oldY) {\r\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\r\n}\r\n\r\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\r\n\tlet newHeight = newY1 - newY2;\r\n\tlet rect = rectGroup.childNodes[0];\r\n\tlet width = rect.getAttribute(\"width\");\r\n\tlet rectAnim = [\r\n\t\trect,\r\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\r\n\t\tMARKER_LINE_ANIM_DUR,\r\n\t\tSTD_EASING\r\n\t];\r\n\r\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\r\n\treturn [rectAnim, groupAnim];\r\n}\r\n\r\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\r\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\r\n\ty -= offset;\r\n\tif(bar.nodeName !== 'rect') {\r\n\t\tlet rect = bar.childNodes[0];\r\n\t\tlet rectAnim = [\r\n\t\t\trect,\r\n\t\t\t{width: width, height: height},\r\n\t\t\tUNIT_ANIM_DUR,\r\n\t\t\tSTD_EASING\r\n\t\t];\r\n\r\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\r\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\r\n\t\treturn [rectAnim, groupAnim];\r\n\t} else {\r\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\r\n\t}\r\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\r\n}\r\n\r\nexport function animateDot(dot, x, y) {\r\n\tif(dot.nodeName !== 'circle') {\r\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\r\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\r\n\t\treturn [groupAnim];\r\n\t} else {\r\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\r\n\t}\r\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\r\n}\r\n\r\nexport function animatePath(paths, newXList, newYList, zeroLine) {\r\n\tlet pathComponents = [];\r\n\r\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\r\n\tlet pathStr = pointsStr.join(\"L\");\r\n\r\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\r\n\tpathComponents.push(animPath);\r\n\r\n\tif(paths.region) {\r\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\r\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\r\n\r\n\t\tconst animRegion = [\r\n\t\t\tpaths.region,\r\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\r\n\t\t\tPATH_ANIM_DUR,\r\n\t\t\tSTD_EASING\r\n\t\t];\r\n\t\tpathComponents.push(animRegion);\r\n\t}\r\n\r\n\treturn pathComponents;\r\n}\r\n\r\nexport function animatePathStr(oldPath, pathStr) {\r\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\r\n}\r\n","// Leveraging SMIL Animations\r\n\r\nimport { REPLACE_ALL_NEW_DUR } from './animate';\r\n\r\nconst EASING = {\r\n\tease: \"0.25 0.1 0.25 1\",\r\n\tlinear: \"0 0 1 1\",\r\n\t// easein: \"0.42 0 1 1\",\r\n\teasein: \"0.1 0.8 0.2 1\",\r\n\teaseout: \"0 0 0.58 1\",\r\n\teaseinout: \"0.42 0 0.58 1\"\r\n};\r\n\r\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\r\n\r\n\tlet animElement = element.cloneNode(true);\r\n\tlet newElement = element.cloneNode(true);\r\n\r\n\tfor(var attributeName in props) {\r\n\t\tlet animateElement;\r\n\t\tif(attributeName === 'transform') {\r\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\r\n\t\t} else {\r\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\r\n\t\t}\r\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\r\n\t\tlet value = props[attributeName];\r\n\r\n\t\tlet animAttr = {\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tfrom: currentValue,\r\n\t\t\tto: value,\r\n\t\t\tbegin: \"0s\",\r\n\t\t\tdur: dur/1000 + \"s\",\r\n\t\t\tvalues: currentValue + \";\" + value,\r\n\t\t\tkeySplines: EASING[easingType],\r\n\t\t\tkeyTimes: \"0;1\",\r\n\t\t\tcalcMode: \"spline\",\r\n\t\t\tfill: 'freeze'\r\n\t\t};\r\n\r\n\t\tif(type) {\r\n\t\t\tanimAttr[\"type\"] = type;\r\n\t\t}\r\n\r\n\t\tfor (var i in animAttr) {\r\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\r\n\t\t}\r\n\r\n\t\tanimElement.appendChild(animateElement);\r\n\r\n\t\tif(type) {\r\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\r\n\t\t} else {\r\n\t\t\tnewElement.setAttribute(attributeName, value);\r\n\t\t}\r\n\t}\r\n\r\n\treturn [animElement, newElement];\r\n}\r\n\r\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\r\n\telement.style.transform = style;\r\n\telement.style.webkitTransform = style;\r\n\telement.style.msTransform = style;\r\n\telement.style.mozTransform = style;\r\n\telement.style.oTransform = style;\r\n}\r\n\r\nfunction animateSVG(svgContainer, elements) {\r\n\tlet newElements = [];\r\n\tlet animElements = [];\r\n\r\n\telements.map(element => {\r\n\t\tlet unit = element[0];\r\n\t\tlet parent = unit.parentNode;\r\n\r\n\t\tlet animElement, newElement;\r\n\r\n\t\telement[0] = unit;\r\n\t\t[animElement, newElement] = animateSVGElement(...element);\r\n\r\n\t\tnewElements.push(newElement);\r\n\t\tanimElements.push([animElement, parent]);\r\n\r\n\t\tparent.replaceChild(animElement, unit);\r\n\t});\r\n\r\n\tlet animSvg = svgContainer.cloneNode(true);\r\n\r\n\tanimElements.map((animElement, i) => {\r\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\r\n\t\telements[i][0] = newElements[i];\r\n\t});\r\n\r\n\treturn animSvg;\r\n}\r\n\r\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\r\n\tif(elementsToAnimate.length === 0) return;\r\n\r\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\r\n\tif(svgElement.parentNode == parent) {\r\n\t\tparent.removeChild(svgElement);\r\n\t\tparent.appendChild(animSvgElement);\r\n\r\n\t}\r\n\r\n\t// Replace the new svgElement (data has already been replaced)\r\n\tsetTimeout(() => {\r\n\t\tif(animSvgElement.parentNode == parent) {\r\n\t\t\tparent.removeChild(animSvgElement);\r\n\t\t\tparent.appendChild(svgElement);\r\n\t\t}\r\n\t}, REPLACE_ALL_NEW_DUR);\r\n}\r\n","import { $ } from '../utils/dom';\r\nimport { CSSTEXT } from '../../css/chartsCss';\r\n\r\nexport function downloadFile(filename, data) {\r\n\tvar a = document.createElement('a');\r\n\ta.style = \"display: none\";\r\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\r\n\tvar url = window.URL.createObjectURL(blob);\r\n\ta.href = url;\r\n\ta.download = filename;\r\n\tdocument.body.appendChild(a);\r\n\ta.click();\r\n\tsetTimeout(function(){\r\n\t\tdocument.body.removeChild(a);\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t}, 300);\r\n}\r\n\r\nexport function prepareForExport(svg) {\r\n\tlet clone = svg.cloneNode(true);\r\n\tclone.classList.add('chart-container');\r\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\r\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\r\n\tlet styleEl = $.create('style', {\r\n\t\t'innerHTML': CSSTEXT\r\n\t});\r\n\tclone.insertBefore(styleEl, clone.firstChild);\r\n\r\n\tlet container = $.create('div');\r\n\tcontainer.appendChild(clone);\r\n\r\n\treturn container.innerHTML;\r\n}\r\n","// Playing around with dates\r\n\r\nexport const NO_OF_YEAR_MONTHS = 12;\r\nexport const NO_OF_DAYS_IN_WEEK = 7;\r\nexport const DAYS_IN_YEAR = 375;\r\nexport const NO_OF_MILLIS = 1000;\r\nexport const SEC_IN_DAY = 86400;\r\n\r\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\r\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n\t\"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n// https://stackoverflow.com/a/11252167/6495043\r\nfunction treatAsUtc(date) {\r\n\tlet result = new Date(date);\r\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\r\n\treturn result;\r\n}\r\n\r\nexport function getYyyyMmDd(date) {\r\n\tlet dd = date.getDate();\r\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\r\n\treturn [\r\n\t\tdate.getFullYear(),\r\n\t\t(mm>9 ? '' : '0') + mm,\r\n\t\t(dd>9 ? '' : '0') + dd\r\n\t].join('-');\r\n}\r\n\r\nexport function clone(date) {\r\n\treturn new Date(date.getTime());\r\n}\r\n\r\nexport function timestampSec(date) {\r\n\treturn date.getTime()/NO_OF_MILLIS;\r\n}\r\n\r\nexport function timestampToMidnight(timestamp, roundAhead = false) {\r\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\r\n\tif(roundAhead) {\r\n\t\treturn midnightTs + SEC_IN_DAY;\r\n\t}\r\n\treturn midnightTs;\r\n}\r\n\r\n// export function getMonthsBetween(startDate, endDate) {}\r\n\r\nexport function getWeeksBetween(startDate, endDate) {\r\n\tlet weekStartDate = setDayToSunday(startDate);\r\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\r\n}\r\n\r\nexport function getDaysBetween(startDate, endDate) {\r\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\r\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\r\n}\r\n\r\nexport function areInSameMonth(startDate, endDate) {\r\n\treturn startDate.getMonth() === endDate.getMonth()\r\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\r\n}\r\n\r\nexport function getMonthName(i, short=false) {\r\n\tlet monthName = MONTH_NAMES[i];\r\n\treturn short ? monthName.slice(0, 3) : monthName;\r\n}\r\n\r\nexport function getLastDateInMonth (month, year) {\r\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\r\n}\r\n\r\n// mutates\r\nexport function setDayToSunday(date) {\r\n\tlet newDate = clone(date);\r\n\tconst day = newDate.getDay();\r\n\tif(day !== 0) {\r\n\t\taddDays(newDate, (-1) * day);\r\n\t}\r\n\treturn newDate;\r\n}\r\n\r\n// mutates\r\nexport function addDays(date, numberOfDays) {\r\n\tdate.setDate(date.getDate() + numberOfDays);\r\n}\r\n","import { makeSVGGroup } from '../utils/draw';\r\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\r\nimport { equilizeNoOfElements } from '../utils/draw-utils';\r\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\r\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\r\nimport { getMonthName } from '../utils/date-utils';\r\n\r\nclass ChartComponent {\r\n\tconstructor({\r\n\t\tlayerClass = '',\r\n\t\tlayerTransform = '',\r\n\t\tconstants,\r\n\r\n\t\tgetData,\r\n\t\tmakeElements,\r\n\t\tanimateElements\r\n\t}) {\r\n\t\tthis.layerTransform = layerTransform;\r\n\t\tthis.constants = constants;\r\n\r\n\t\tthis.makeElements = makeElements;\r\n\t\tthis.getData = getData;\r\n\r\n\t\tthis.animateElements = animateElements;\r\n\r\n\t\tthis.store = [];\r\n\t\tthis.labels = [];\r\n\r\n\t\tthis.layerClass = layerClass;\r\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\r\n\t\t\t? this.layerClass() : this.layerClass;\r\n\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\trefresh(data) {\r\n\t\tthis.data = data || this.getData();\r\n\t}\r\n\r\n\tsetup(parent) {\r\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\r\n\t}\r\n\r\n\tmake() {\r\n\t\tthis.render(this.data);\r\n\t\tthis.oldData = this.data;\r\n\t}\r\n\r\n\trender(data) {\r\n\t\tthis.store = this.makeElements(data);\r\n\r\n\t\tthis.layer.textContent = '';\r\n\t\tthis.store.forEach(element => {\r\n\t\t\tthis.layer.appendChild(element);\r\n\t\t});\r\n\t\tthis.labels.forEach(element => {\r\n\t\t\tthis.layer.appendChild(element);\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(animate = true) {\r\n\t\tthis.refresh();\r\n\t\tlet animateElements = [];\r\n\t\tif(animate) {\r\n\t\t\tanimateElements = this.animateElements(this.data) || [];\r\n\t\t}\r\n\t\treturn animateElements;\r\n\t}\r\n}\r\n\r\nlet componentConfigs = {\r\n\tpieSlices: {\r\n\t\tlayerClass: 'pie-slices',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.sliceStrings.map((s, i) =>{\r\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\r\n\t\t\t\tslice.style.transition = 'transform .3s;';\r\n\t\t\t\treturn slice;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\treturn this.store.map((slice, i) =>\r\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\tpercentageBars: {\r\n\t\tlayerClass: 'percentage-bars',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.xPositions.map((x, i) =>{\r\n\t\t\t\tlet y = 0;\r\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\r\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\r\n\t\t\t\treturn bar;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tif(newData) return [];\r\n\t\t}\r\n\t},\r\n\tyAxis: {\r\n\t\tlayerClass: 'y axis',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.positions.map((position, i) =>\r\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\r\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newPos = newData.positions;\r\n\t\t\tlet newLabels = newData.labels;\r\n\t\t\tlet oldPos = this.oldData.positions;\r\n\t\t\tlet oldLabels = this.oldData.labels;\r\n\r\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\tpositions: oldPos,\r\n\t\t\t\tlabels: newLabels\r\n\t\t\t});\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateHoriLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\txAxis: {\r\n\t\tlayerClass: 'x axis',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.positions.map((position, i) =>\r\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\r\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newPos = newData.positions;\r\n\t\t\tlet newLabels = newData.calcLabels;\r\n\t\t\tlet oldPos = this.oldData.positions;\r\n\t\t\tlet oldLabels = this.oldData.calcLabels;\r\n\r\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\tpositions: oldPos,\r\n\t\t\t\tcalcLabels: newLabels\r\n\t\t\t});\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateVertLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tyMarkers: {\r\n\t\tlayerClass: 'y-markers',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.map(m =>\r\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\r\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\r\n\t\t\t);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\r\n\r\n\t\t\tlet newPos = newData.map(d => d.position);\r\n\t\t\tlet newLabels = newData.map(d => d.label);\r\n\t\t\tlet newOptions = newData.map(d => d.options);\r\n\r\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\r\n\r\n\t\t\tthis.render(oldPos.map((pos, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: oldPos[i],\r\n\t\t\t\t\tlabel: newLabels[i],\r\n\t\t\t\t\toptions: newOptions[i]\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateHoriLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tyRegions: {\r\n\t\tlayerClass: 'y-regions',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.map(r =>\r\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\r\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\r\n\t\t\t);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\r\n\r\n\t\t\tlet newPos = newData.map(d => d.endPos);\r\n\t\t\tlet newLabels = newData.map(d => d.label);\r\n\t\t\tlet newStarts = newData.map(d => d.startPos);\r\n\t\t\tlet newOptions = newData.map(d => d.options);\r\n\r\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\r\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\r\n\r\n\t\t\tthis.render(oldPos.map((pos, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstartPos: oldStarts[i],\r\n\t\t\t\t\tendPos: oldPos[i],\r\n\t\t\t\t\tlabel: newLabels[i],\r\n\t\t\t\t\toptions: newOptions[i]\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tthis.store.map((rectGroup, i) => {\r\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\r\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\r\n\t\t\t\t));\r\n\t\t\t});\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t},\r\n\r\n\theatDomain: {\r\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet {index, colWidth, rowHeight, squareSize, xTranslate} = this.constants;\r\n\t\t\tlet monthNameHeight = -12;\r\n\t\t\tlet x = xTranslate, y = 0;\r\n\r\n\t\t\tthis.serializedSubDomains = [];\r\n\r\n\t\t\tdata.cols.map((week, weekNo) => {\r\n\t\t\t\tif(weekNo === 1) {\r\n\t\t\t\t\tthis.labels.push(\r\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfontSize: 9\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tweek.map((day, i) => {\r\n\t\t\t\t\tif(day.fill) {\r\n\t\t\t\t\t\tlet data = {\r\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\r\n\t\t\t\t\t\t\t'data-value': day.dataValue,\r\n\t\t\t\t\t\t\t'data-day': i\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, day.fill, data);\r\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ty += rowHeight;\r\n\t\t\t\t});\r\n\t\t\t\ty = 0;\r\n\t\t\t\tx += colWidth;\r\n\t\t\t});\r\n\r\n\t\t\treturn this.serializedSubDomains;\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tif(newData) return [];\r\n\t\t}\r\n\t},\r\n\r\n\tbarGraph: {\r\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet c = this.constants;\r\n\t\t\tthis.unitType = 'bar';\r\n\t\t\tthis.units = data.yPositions.map((y, j) => {\r\n\t\t\t\treturn datasetBar(\r\n\t\t\t\t\tdata.xPositions[j],\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tdata.barWidth,\r\n\t\t\t\t\tc.color,\r\n\t\t\t\t\tdata.labels[j],\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tdata.offsets[j],\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tzeroLine: data.zeroLine,\r\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\r\n\t\t\t\t\t\tminHeight: c.minHeight\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\treturn this.units;\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newXPos = newData.xPositions;\r\n\t\t\tlet newYPos = newData.yPositions;\r\n\t\t\tlet newOffsets = newData.offsets;\r\n\t\t\tlet newLabels = newData.labels;\r\n\r\n\t\t\tlet oldXPos = this.oldData.xPositions;\r\n\t\t\tlet oldYPos = this.oldData.yPositions;\r\n\t\t\tlet oldOffsets = this.oldData.offsets;\r\n\t\t\tlet oldLabels = this.oldData.labels;\r\n\r\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\r\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\r\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\txPositions: oldXPos,\r\n\t\t\t\tyPositions: oldYPos,\r\n\t\t\t\toffsets: oldOffsets,\r\n\t\t\t\tlabels: newLabels,\r\n\r\n\t\t\t\tzeroLine: this.oldData.zeroLine,\r\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\r\n\t\t\t\tbarWidth: this.oldData.barWidth,\r\n\t\t\t});\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tthis.store.map((bar, i) => {\r\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\r\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\r\n\t\t\t\t\t{zeroLine: newData.zeroLine}\r\n\t\t\t\t));\r\n\t\t\t});\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t},\r\n\r\n\tlineGraph: {\r\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet c = this.constants;\r\n\t\t\tthis.unitType = 'dot';\r\n\t\t\tthis.paths = {};\r\n\t\t\tif(!c.hideLine) {\r\n\t\t\t\tthis.paths = getPaths(\r\n\t\t\t\t\tdata.xPositions,\r\n\t\t\t\t\tdata.yPositions,\r\n\t\t\t\t\tc.color,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\theatline: c.heatline,\r\n\t\t\t\t\t\tregionFill: c.regionFill\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\r\n\t\t\t\t\t\tzeroLine: data.zeroLine\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis.units = [];\r\n\t\t\tif(!c.hideDots) {\r\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\r\n\t\t\t\t\treturn datasetDot(\r\n\t\t\t\t\t\tdata.xPositions[j],\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\tc.color,\r\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\r\n\t\t\t\t\t\tj\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn Object.values(this.paths).concat(this.units);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newXPos = newData.xPositions;\r\n\t\t\tlet newYPos = newData.yPositions;\r\n\t\t\tlet newValues = newData.values;\r\n\r\n\t\t\tlet oldXPos = this.oldData.xPositions;\r\n\t\t\tlet oldYPos = this.oldData.yPositions;\r\n\t\t\tlet oldValues = this.oldData.values;\r\n\r\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\r\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\r\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\txPositions: oldXPos,\r\n\t\t\t\tyPositions: oldYPos,\r\n\t\t\t\tvalues: newValues,\r\n\r\n\t\t\t\tzeroLine: this.oldData.zeroLine,\r\n\t\t\t\tradius: this.oldData.radius,\r\n\t\t\t});\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tif(Object.keys(this.paths).length) {\r\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\r\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\r\n\t\t\t}\r\n\r\n\t\t\tif(this.units.length) {\r\n\t\t\t\tthis.units.map((dot, i) => {\r\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\r\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport function getComponent(name, constants, getData) {\r\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\r\n\tlet config = componentConfigs[keys[0]];\r\n\tObject.assign(config, {\r\n\t\tconstants: constants,\r\n\t\tgetData: getData\r\n\t});\r\n\treturn new ChartComponent(config);\r\n}\r\n","import { floatTwo } from './helpers';\r\n\r\nfunction normalize(x) {\r\n\t// Calculates mantissa and exponent of a number\r\n\t// Returns normalized number and exponent\r\n\t// https://stackoverflow.com/q/9383593/6495043\r\n\r\n\tif(x===0) {\r\n\t\treturn [0, 0];\r\n\t}\r\n\tif(isNaN(x)) {\r\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\r\n\t}\r\n\tvar sig = x > 0 ? 1 : -1;\r\n\tif(!isFinite(x)) {\r\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\r\n\t}\r\n\r\n\tx = Math.abs(x);\r\n\tvar exp = Math.floor(Math.log10(x));\r\n\tvar man = x/Math.pow(10, exp);\r\n\r\n\treturn [sig * man, exp];\r\n}\r\n\r\nfunction getChartRangeIntervals(max, min=0) {\r\n\tlet upperBound = Math.ceil(max);\r\n\tlet lowerBound = Math.floor(min);\r\n\tlet range = upperBound - lowerBound;\r\n\r\n\tlet noOfParts = range;\r\n\tlet partSize = 1;\r\n\r\n\t// To avoid too many partitions\r\n\tif(range > 5) {\r\n\t\tif(range % 2 !== 0) {\r\n\t\t\tupperBound++;\r\n\t\t\t// Recalc range\r\n\t\t\trange = upperBound - lowerBound;\r\n\t\t}\r\n\t\tnoOfParts = range/2;\r\n\t\tpartSize = 2;\r\n\t}\r\n\r\n\t// Special case: 1 and 2\r\n\tif(range <= 2) {\r\n\t\tnoOfParts = 4;\r\n\t\tpartSize = range/noOfParts;\r\n\t}\r\n\r\n\t// Special case: 0\r\n\tif(range === 0) {\r\n\t\tnoOfParts = 5;\r\n\t\tpartSize = 1;\r\n\t}\r\n\r\n\tlet intervals = [];\r\n\tfor(var i = 0; i <= noOfParts; i++){\r\n\t\tintervals.push(lowerBound + partSize * i);\r\n\t}\r\n\treturn intervals;\r\n}\r\n\r\nfunction getChartIntervals(maxValue, minValue=0) {\r\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\r\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\r\n\r\n\t// Allow only 7 significant digits\r\n\tnormalMaxValue = normalMaxValue.toFixed(6);\r\n\r\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\r\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\r\n\treturn intervals;\r\n}\r\n\r\nexport function calcChartIntervals(values, withMinimum=false) {\r\n\t//*** Where the magic happens ***\r\n\r\n\t// Calculates best-fit y intervals from given values\r\n\t// and returns the interval array\r\n\r\n\tlet maxValue = Math.max(...values);\r\n\tlet minValue = Math.min(...values);\r\n\r\n\t// Exponent to be used for pretty print\r\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\r\n\r\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\r\n\t\tlet intervals = getChartIntervals(maxValue);\r\n\r\n\t\tlet intervalSize = intervals[1] - intervals[0];\r\n\r\n\t\t// Then unshift the negative values\r\n\t\tlet value = 0;\r\n\t\tfor(var i = 1; value < absMinValue; i++) {\r\n\t\t\tvalue += intervalSize;\r\n\t\t\tintervals.unshift((-1) * value);\r\n\t\t}\r\n\t\treturn intervals;\r\n\t}\r\n\r\n\t// CASE I: Both non-negative\r\n\r\n\tif(maxValue >= 0 && minValue >= 0) {\r\n\t\texponent = normalize(maxValue)[1];\r\n\t\tif(!withMinimum) {\r\n\t\t\tintervals = getChartIntervals(maxValue);\r\n\t\t} else {\r\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\r\n\t\t}\r\n\t}\r\n\r\n\t// CASE II: Only minValue negative\r\n\r\n\telse if(maxValue > 0 && minValue < 0) {\r\n\t\t// `withMinimum` irrelevant in this case,\r\n\t\t// We'll be handling both sides of zero separately\r\n\t\t// (both starting from zero)\r\n\t\t// Because ceil() and floor() behave differently\r\n\t\t// in those two regions\r\n\r\n\t\tlet absMinValue = Math.abs(minValue);\r\n\r\n\t\tif(maxValue >= absMinValue) {\r\n\t\t\texponent = normalize(maxValue)[1];\r\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\r\n\t\t} else {\r\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\r\n\t\t\texponent = normalize(absMinValue)[1];\r\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\r\n\t\t\tintervals = posIntervals.map(d => d * (-1));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// CASE III: Both non-positive\r\n\r\n\telse if(maxValue <= 0 && minValue <= 0) {\r\n\t\t// Mirrored Case I:\r\n\t\t// Work with positives, then reverse the sign and array\r\n\r\n\t\tlet pseudoMaxValue = Math.abs(minValue);\r\n\t\tlet pseudoMinValue = Math.abs(maxValue);\r\n\r\n\t\texponent = normalize(pseudoMaxValue)[1];\r\n\t\tif(!withMinimum) {\r\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\r\n\t\t} else {\r\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\r\n\t\t}\r\n\r\n\t\tintervals = intervals.reverse().map(d => d * (-1));\r\n\t}\r\n\r\n\treturn intervals;\r\n}\r\n\r\nexport function getZeroIndex(yPts) {\r\n\tlet zeroIndex;\r\n\tlet interval = getIntervalSize(yPts);\r\n\tif(yPts.indexOf(0) >= 0) {\r\n\t\t// the range has a given zero\r\n\t\t// zero-line on the chart\r\n\t\tzeroIndex = yPts.indexOf(0);\r\n\t} else if(yPts[0] > 0) {\r\n\t\t// Minimum value is positive\r\n\t\t// zero-line is off the chart: below\r\n\t\tlet min = yPts[0];\r\n\t\tzeroIndex = (-1) * min / interval;\r\n\t} else {\r\n\t\t// Maximum value is negative\r\n\t\t// zero-line is off the chart: above\r\n\t\tlet max = yPts[yPts.length - 1];\r\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\r\n\t}\r\n\treturn zeroIndex;\r\n}\r\n\r\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\r\n\tlet range = max - min;\r\n\tlet part = range * 1.0 / noOfIntervals;\r\n\tlet intervals = [];\r\n\r\n\tfor(var i = 0; i <= noOfIntervals; i++) {\r\n\t\tintervals.push(min + part * i);\r\n\t}\r\n\r\n\treturn asc ? intervals : intervals.reverse();\r\n}\r\n\r\nexport function getIntervalSize(orderedArray) {\r\n\treturn orderedArray[1] - orderedArray[0];\r\n}\r\n\r\nexport function getValueRange(orderedArray) {\r\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\r\n}\r\n\r\nexport function scale(val, yAxis) {\r\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\r\n}\r\n\r\nexport function isInRange(val, min, max) {\r\n\treturn val > min && val < max;\r\n}\r\n\r\nexport function isInRange2D(coord, minCoord, maxCoord) {\r\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\r\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\r\n}\r\n\r\nexport function getClosestInArray(goal, arr, index = false) {\r\n\tlet closest = arr.reduce(function(prev, curr) {\r\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\r\n\t});\r\n\r\n\treturn index ? arr.indexOf(closest) : closest;\r\n}\r\n\r\nexport function calcDistribution(values, distributionSize) {\r\n\t// Assume non-negative values,\r\n\t// implying distribution minimum at zero\r\n\r\n\tlet dataMaxValue = Math.max(...values);\r\n\r\n\tlet distributionStep = 1 / (distributionSize - 1);\r\n\tlet distribution = [];\r\n\r\n\tfor(var i = 0; i < distributionSize; i++) {\r\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\r\n\t\tdistribution.push(checkpoint);\r\n\t}\r\n\r\n\treturn distribution;\r\n}\r\n\r\nexport function getMaxCheckpoint(value, distribution) {\r\n\treturn distribution.filter(d => d < value).length;\r\n}\r\n","import { fillArray } from '../utils/helpers';\r\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\r\n\r\nexport function dataPrep(data, type) {\r\n\tdata.labels = data.labels || [];\r\n\r\n\tlet datasetLength = data.labels.length;\r\n\r\n\t// Datasets\r\n\tlet datasets = data.datasets;\r\n\tlet zeroArray = new Array(datasetLength).fill(0);\r\n\tif(!datasets) {\r\n\t\t// default\r\n\t\tdatasets = [{\r\n\t\t\tvalues: zeroArray\r\n\t\t}];\r\n\t}\r\n\r\n\tdatasets.map(d=> {\r\n\t\t// Set values\r\n\t\tif(!d.values) {\r\n\t\t\td.values = zeroArray;\r\n\t\t} else {\r\n\t\t\t// Check for non values\r\n\t\t\tlet vals = d.values;\r\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\r\n\r\n\t\t\t// Trim or extend\r\n\t\t\tif(vals.length > datasetLength) {\r\n\t\t\t\tvals = vals.slice(0, datasetLength);\r\n\t\t\t} else {\r\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set labels\r\n\t\t//\r\n\r\n\t\t// Set type\r\n\t\tif(!d.chartType ) {\r\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\r\n\t\t\td.chartType = type;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// Markers\r\n\r\n\t// Regions\r\n\t// data.yRegions = data.yRegions || [];\r\n\tif(data.yRegions) {\r\n\t\tdata.yRegions.map(d => {\r\n\t\t\tif(d.end < d.start) {\r\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\nexport function zeroDataPrep(realData) {\r\n\tlet datasetLength = realData.labels.length;\r\n\tlet zeroArray = new Array(datasetLength).fill(0);\r\n\r\n\tlet zeroData = {\r\n\t\tlabels: realData.labels.slice(0, -1),\r\n\t\tdatasets: realData.datasets.map(d => {\r\n\t\t\treturn {\r\n\t\t\t\tname: '',\r\n\t\t\t\tvalues: zeroArray.slice(0, -1),\r\n\t\t\t\tchartType: d.chartType\r\n\t\t\t};\r\n\t\t}),\r\n\t};\r\n\r\n\tif(realData.yMarkers) {\r\n\t\tzeroData.yMarkers = [\r\n\t\t\t{\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tlabel: ''\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tif(realData.yRegions) {\r\n\t\tzeroData.yRegions = [\r\n\t\t\t{\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tend: 0,\r\n\t\t\t\tlabel: ''\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\treturn zeroData;\r\n}\r\n\r\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\r\n\tlet allowedSpace = chartWidth / labels.length;\r\n\tif(allowedSpace <= 0) allowedSpace = 1;\r\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\r\n\r\n\tlet calcLabels = labels.map((label, i) => {\r\n\t\tlabel += \"\";\r\n\t\tif(label.length > allowedLetters) {\r\n\r\n\t\t\tif(!isSeries) {\r\n\t\t\t\tif(allowedLetters-3 > 0) {\r\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\r\n\t\t\t\tif(i % multiple !== 0) {\r\n\t\t\t\t\tlabel = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn label;\r\n\t});\r\n\r\n\treturn calcLabels;\r\n}\r\n","import '../css/charts.scss';\r\n\r\n// import MultiAxisChart from './charts/MultiAxisChart';\r\nimport PercentageChart from './charts/PercentageChart';\r\nimport PieChart from './charts/PieChart';\r\nimport Heatmap from './charts/Heatmap';\r\nimport AxisChart from './charts/AxisChart';\r\n\r\nconst chartTypes = {\r\n\tbar: AxisChart,\r\n\tline: AxisChart,\r\n\t// multiaxis: MultiAxisChart,\r\n\tpercentage: PercentageChart,\r\n\theatmap: Heatmap,\r\n\tpie: PieChart\r\n};\r\n\r\nfunction getChartByType(chartType = 'line', parent, options) {\r\n\tif (chartType === 'axis-mixed') {\r\n\t\toptions.type = 'line';\r\n\t\treturn new AxisChart(parent, options);\r\n\t}\r\n\r\n\tif (!chartTypes[chartType]) {\r\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn new chartTypes[chartType](parent, options);\r\n}\r\n\r\nclass Chart {\r\n\tconstructor(parent, options) {\r\n\t\treturn getChartByType(options.type, parent, options);\r\n\t}\r\n}\r\n\r\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\r\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\r\n\r\nexport default class SvgTip {\r\n\tconstructor({\r\n\t\tparent = null,\r\n\t\tcolors = []\r\n\t}) {\r\n\t\tthis.parent = parent;\r\n\t\tthis.colors = colors;\r\n\t\tthis.titleName = '';\r\n\t\tthis.titleValue = '';\r\n\t\tthis.listValues = [];\r\n\t\tthis.titleValueFirst = 0;\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\tthis.top = 0;\r\n\t\tthis.left = 0;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tthis.makeTooltip();\r\n\t}\r\n\r\n\trefresh() {\r\n\t\tthis.fill();\r\n\t\tthis.calcPosition();\r\n\t}\r\n\r\n\tmakeTooltip() {\r\n\t\tthis.container = $.create('div', {\r\n\t\t\tinside: this.parent,\r\n\t\t\tclassName: 'graph-svg-tip comparison',\r\n\t\t\tinnerHTML: `<span class=\"title\"></span>\r\n\t\t\t\t<ul class=\"data-point-list\"></ul>\r\n\t\t\t\t<div class=\"svg-pointer\"></div>`\r\n\t\t});\r\n\t\tthis.hideTip();\r\n\r\n\t\tthis.title = this.container.querySelector('.title');\r\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\r\n\r\n\t\tthis.parent.addEventListener('mouseleave', () => {\r\n\t\t\tthis.hideTip();\r\n\t\t});\r\n\t}\r\n\r\n\tfill() {\r\n\t\tlet title;\r\n\t\tif(this.index) {\r\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\r\n\t\t}\r\n\t\tif(this.titleValueFirst) {\r\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\r\n\t\t} else {\r\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\r\n\t\t}\r\n\t\tthis.title.innerHTML = title;\r\n\t\tthis.dataPointList.innerHTML = '';\r\n\r\n\t\tthis.listValues.map((set, i) => {\r\n\t\t\tconst color = this.colors[i] || 'black';\r\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\r\n\r\n\t\t\tlet li = $.create('li', {\r\n\t\t\t\tstyles: {\r\n\t\t\t\t\t'border-top': `3px solid ${color}`\r\n\t\t\t\t},\r\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\r\n\t\t\t\t\t${set.title ? set.title : '' }`\r\n\t\t\t});\r\n\r\n\t\t\tthis.dataPointList.appendChild(li);\r\n\t\t});\r\n\t}\r\n\r\n\tcalcPosition() {\r\n\t\tlet width = this.container.offsetWidth;\r\n\r\n\t\tthis.top = this.y - this.container.offsetHeight\r\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\r\n\t\tthis.left = this.x - width/2;\r\n\t\tlet maxLeft = this.parent.offsetWidth - width;\r\n\r\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\r\n\r\n\t\tif(this.left < 0) {\r\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\r\n\t\t\tthis.left = 0;\r\n\t\t} else if(this.left > maxLeft) {\r\n\t\t\tlet delta = this.left - maxLeft;\r\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\r\n\t\t\tpointer.style.left = pointerOffset;\r\n\r\n\t\t\tthis.left = maxLeft;\r\n\t\t} else {\r\n\t\t\tpointer.style.left = `50%`;\r\n\t\t}\r\n\t}\r\n\r\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\r\n\t\tthis.titleName = title.name;\r\n\t\tthis.titleValue = title.value;\r\n\t\tthis.listValues = listValues;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.titleValueFirst = title.valueFirst || 0;\r\n\t\tthis.index = index;\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\thideTip() {\r\n\t\tthis.container.style.top = '0px';\r\n\t\tthis.container.style.left = '0px';\r\n\t\tthis.container.style.opacity = '0';\r\n\t}\r\n\r\n\tshowTip() {\r\n\t\tthis.container.style.top = this.top + 'px';\r\n\t\tthis.container.style.left = this.left + 'px';\r\n\t\tthis.container.style.opacity = '1';\r\n\t}\r\n}\r\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\r\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\r\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\r\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\r\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\r\nimport { getColor, isValidColor } from '../utils/colors';\r\nimport { runSMILAnimation } from '../utils/animation';\r\nimport { downloadFile, prepareForExport } from '../utils/export';\r\n\r\nlet BOUND_DRAW_FN;\r\n\r\nexport default class BaseChart {\r\n\tconstructor(parent, options) {\r\n\r\n\t\tthis.parent = typeof parent === 'string'\r\n\t\t\t? document.querySelector(parent)\r\n\t\t\t: parent;\r\n\r\n\t\tif (!(this.parent instanceof HTMLElement)) {\r\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\r\n\t\t}\r\n\r\n\t\tthis.rawChartArgs = options;\r\n\r\n\t\tthis.title = options.title || '';\r\n\t\tthis.type = options.type || '';\r\n\r\n\t\tthis.realData = this.prepareData(options.data);\r\n\t\tthis.data = this.prepareFirstData(this.realData);\r\n\r\n\t\tthis.colors = this.validateColors(options.colors, this.type);\r\n\r\n\t\tthis.config = {\r\n\t\t\tshowTooltip: 1, // calculate\r\n\t\t\tshowLegend: 1, // calculate\r\n\t\t\tisNavigable: options.isNavigable || 0,\r\n\t\t\tanimate: 1\r\n\t\t};\r\n\r\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\r\n\t\tlet m = this.measures;\r\n\t\tthis.setMeasures(options);\r\n\t\tif(!this.title.length) { m.titleHeight = 0; }\r\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\r\n\t\tthis.argHeight = options.height || m.baseHeight;\r\n\r\n\t\tthis.state = {};\r\n\t\tthis.options = {};\r\n\r\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\r\n\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\tthis.overlays = [];\r\n\t\t}\r\n\r\n\t\tthis.configure(options);\r\n\t}\r\n\r\n\tprepareData(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprepareFirstData(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\tvalidateColors(colors, type) {\r\n\t\tconst validColors = [];\r\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\r\n\t\tcolors.forEach((string) => {\r\n\t\t\tconst color = getColor(string);\r\n\t\t\tif(!isValidColor(color)) {\r\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\r\n\t\t\t} else {\r\n\t\t\t\tvalidColors.push(color);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn validColors;\r\n\t}\r\n\r\n\tsetMeasures() {\r\n\t\t// Override measures, including those for title and legend\r\n\t\t// set config for legend and title\r\n\t}\r\n\r\n\tconfigure() {\r\n\t\tlet height = this.argHeight;\r\n\t\tthis.baseHeight = height;\r\n\t\tthis.height = height - getExtraHeight(this.measures);\r\n\r\n\t\t// Bind window events\r\n\t\tBOUND_DRAW_FN = this.boundDrawFn.bind(this);\r\n\t\twindow.addEventListener('resize', BOUND_DRAW_FN);\r\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn.bind(this));\r\n\t}\r\n\r\n\tboundDrawFn() {\r\n\t\tthis.draw(true);\r\n\t}\r\n\r\n\tunbindWindowEvents() {\r\n\t\twindow.removeEventListener('resize', BOUND_DRAW_FN);\r\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn.bind(this));\r\n\t}\r\n\r\n\t// Has to be called manually\r\n\tsetup() {\r\n\t\tthis.makeContainer();\r\n\t\tthis.updateWidth();\r\n\t\tthis.makeTooltip();\r\n\r\n\t\tthis.draw(false, true);\r\n\t}\r\n\r\n\tmakeContainer() {\r\n\t\t// Chart needs a dedicated parent element\r\n\t\tthis.parent.innerHTML = '';\r\n\r\n\t\tlet args = {\r\n\t\t\tinside: this.parent,\r\n\t\t\tclassName: 'chart-container'\r\n\t\t};\r\n\r\n\t\tif(this.independentWidth) {\r\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\r\n\t\t}\r\n\r\n\t\tthis.container = $.create('div', args);\r\n\t}\r\n\r\n\tmakeTooltip() {\r\n\t\tthis.tip = new SvgTip({\r\n\t\t\tparent: this.container,\r\n\t\t\tcolors: this.colors\r\n\t\t});\r\n\t\tthis.bindTooltip();\r\n\t}\r\n\r\n\tbindTooltip() {}\r\n\r\n\tdraw(onlyWidthChange=false, init=false) {\r\n\t\tthis.updateWidth();\r\n\r\n\t\tthis.calc(onlyWidthChange);\r\n\t\tthis.makeChartArea();\r\n\t\tthis.setupComponents();\r\n\r\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\r\n\t\t// this.components.forEach(c => c.make());\r\n\t\tthis.render(this.components, false);\r\n\r\n\t\tif(init) {\r\n\t\t\tthis.data = this.realData;\r\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\r\n\t\t}\r\n\r\n\t\tthis.renderLegend();\r\n\r\n\t\tthis.setupNavigation(init);\r\n\t}\r\n\r\n\tcalc() {} // builds state\r\n\r\n\tupdateWidth() {\r\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\r\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\r\n\t}\r\n\r\n\tmakeChartArea() {\r\n\t\tif(this.svg) {\r\n\t\t\tthis.container.removeChild(this.svg);\r\n\t\t}\r\n\t\tlet m = this.measures;\r\n\r\n\t\tthis.svg = makeSVGContainer(\r\n\t\t\tthis.container,\r\n\t\t\t'frappe-chart chart',\r\n\t\t\tthis.baseWidth,\r\n\t\t\tthis.baseHeight\r\n\t\t);\r\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\r\n\r\n\t\tif(this.title.length) {\r\n\t\t\tthis.titleEL = makeText(\r\n\t\t\t\t'title',\r\n\t\t\t\tm.margins.left,\r\n\t\t\t\tm.margins.top,\r\n\t\t\t\tthis.title,\r\n\t\t\t\t{\r\n\t\t\t\t\tfontSize: m.titleFontSize,\r\n\t\t\t\t\tfill: '#666666',\r\n\t\t\t\t\tdy: m.titleFontSize\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet top = getTopOffset(m);\r\n\t\tthis.drawArea = makeSVGGroup(\r\n\t\t\tthis.type + '-chart chart-draw-area',\r\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\r\n\t\t);\r\n\r\n\t\tif(this.config.showLegend) {\r\n\t\t\ttop += this.height + m.paddings.bottom;\r\n\t\t\tthis.legendArea = makeSVGGroup(\r\n\t\t\t\t'chart-legend',\r\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\r\n\t\tthis.svg.appendChild(this.drawArea);\r\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\r\n\r\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\r\n\t}\r\n\r\n\tupdateTipOffset(x, y) {\r\n\t\tthis.tip.offset = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\tsetupComponents() { this.components = new Map(); }\r\n\r\n\tupdate(data) {\r\n\t\tif(!data) {\r\n\t\t\tconsole.error('No data to update.');\r\n\t\t}\r\n\t\tthis.data = this.prepareData(data);\r\n\t\tthis.calc(); // builds state\r\n\t\tthis.render();\r\n\t}\r\n\r\n\trender(components=this.components, animate=true) {\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\t// Remove all existing overlays\r\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\r\n\t\t\t// ref.parentNode.insertBefore(element, ref);\r\n\t\t}\r\n\t\tlet elementsToAnimate = [];\r\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\r\n\t\tcomponents.forEach(c => {\r\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\r\n\t\t});\r\n\t\tif(elementsToAnimate.length > 0) {\r\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcomponents.forEach(c => c.make());\r\n\t\t\t\tthis.updateNav();\r\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\r\n\t\t} else {\r\n\t\t\tcomponents.forEach(c => c.make());\r\n\t\t\tthis.updateNav();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNav() {\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\tthis.makeOverlay();\r\n\t\t\tthis.bindUnits();\r\n\t\t}\r\n\t}\r\n\r\n\trenderLegend() {}\r\n\r\n\tsetupNavigation(init=false) {\r\n\t\tif(!this.config.isNavigable) return;\r\n\r\n\t\tif(init) {\r\n\t\t\tthis.bindOverlay();\r\n\r\n\t\t\tthis.keyActions = {\r\n\t\t\t\t'13': this.onEnterKey.bind(this),\r\n\t\t\t\t'37': this.onLeftArrow.bind(this),\r\n\t\t\t\t'38': this.onUpArrow.bind(this),\r\n\t\t\t\t'39': this.onRightArrow.bind(this),\r\n\t\t\t\t'40': this.onDownArrow.bind(this),\r\n\t\t\t};\r\n\r\n\t\t\tdocument.addEventListener('keydown', (e) => {\r\n\t\t\t\tif(isElementInViewport(this.container)) {\r\n\t\t\t\t\te = e || window.event;\r\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\r\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tmakeOverlay() {}\r\n\tupdateOverlay() {}\r\n\tbindOverlay() {}\r\n\tbindUnits() {}\r\n\r\n\tonLeftArrow() {}\r\n\tonRightArrow() {}\r\n\tonUpArrow() {}\r\n\tonDownArrow() {}\r\n\tonEnterKey() {}\r\n\r\n\taddDataPoint() {}\r\n\tremoveDataPoint() {}\r\n\r\n\tgetDataPoint() {}\r\n\tsetCurrentDataPoint() {}\r\n\r\n\tupdateDataset() {}\r\n\r\n\texport() {\r\n\t\tlet chartSvg = prepareForExport(this.svg);\r\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { legendDot } from '../utils/draw';\r\nimport { getExtraWidth } from '../utils/constants';\r\n\r\nexport default class AggregationChart extends BaseChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t}\r\n\r\n\tconfigure(args) {\r\n\t\tsuper.configure(args);\r\n\r\n\t\tthis.config.maxSlices = args.maxSlices || 20;\r\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tlet s = this.state;\r\n\t\tlet maxSlices = this.config.maxSlices;\r\n\t\ts.sliceTotals = [];\r\n\r\n\t\tlet allTotals = this.data.labels.map((label, i) => {\r\n\t\t\tlet total = 0;\r\n\t\t\tthis.data.datasets.map(e => {\r\n\t\t\t\ttotal += e.values[i];\r\n\t\t\t});\r\n\t\t\treturn [total, label];\r\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\r\n\r\n\t\tlet totals = allTotals;\r\n\t\tif(allTotals.length > maxSlices) {\r\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\r\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\r\n\r\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\r\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\r\n\r\n\t\t\tlet sumOfRemaining = 0;\r\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\r\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\r\n\t\t\tthis.colors[maxSlices-1] = 'grey';\r\n\t\t}\r\n\r\n\t\ts.labels = [];\r\n\t\ttotals.map(d => {\r\n\t\t\ts.sliceTotals.push(d[0]);\r\n\t\t\ts.labels.push(d[1]);\r\n\t\t});\r\n\r\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\r\n\r\n\t\tthis.center = {\r\n\t\t\tx: this.width / 2,\r\n\t\t\ty: this.height / 2\r\n\t\t};\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tlet s = this.state;\r\n\t\tthis.legendArea.textContent = '';\r\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\r\n\r\n\t\tlet count = 0;\r\n\t\tlet y = 0;\r\n\t\tthis.legendTotals.map((d, i) => {\r\n\t\t\tlet barWidth = 110;\r\n\t\t\tlet divisor = Math.floor(\r\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\r\n\t\t\t);\r\n\t\t\tif(count > divisor) {\r\n\t\t\t\tcount = 0;\r\n\t\t\t\ty += 20;\r\n\t\t\t}\r\n\t\t\tlet x = barWidth * count + 5;\r\n\t\t\tlet dot = legendDot(\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t\t5,\r\n\t\t\t\tthis.colors[i],\r\n\t\t\t\t`${s.labels[i]}: ${d}`\r\n\t\t\t);\r\n\t\t\tthis.legendArea.appendChild(dot);\r\n\t\t\tcount++;\r\n\t\t});\r\n\t}\r\n}\r\n","import AggregationChart from './AggregationChart';\r\nimport { getOffset } from '../utils/dom';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\r\n\r\nexport default class PercentageChart extends AggregationChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t\tthis.type = 'percentage';\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures(options) {\r\n\t\tlet m = this.measures;\r\n\t\tthis.barOptions = options.barOptions || {};\r\n\r\n\t\tlet b = this.barOptions;\r\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\r\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\r\n\r\n\t\tm.paddings.right = 30;\r\n\t\tm.legendHeight = 80;\r\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'percentageBars',\r\n\t\t\t\t{\r\n\t\t\t\t\tbarHeight: this.barOptions.height,\r\n\t\t\t\t\tbarDepth: this.barOptions.depth,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: s.xPositions,\r\n\t\t\t\t\t\twidths: s.widths,\r\n\t\t\t\t\t\tcolors: this.colors\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tsuper.calc();\r\n\t\tlet s = this.state;\r\n\r\n\t\ts.xPositions = [];\r\n\t\ts.widths = [];\r\n\r\n\t\tlet xPos = 0;\r\n\t\ts.sliceTotals.map((value) => {\r\n\t\t\tlet width = this.width * value / s.grandTotal;\r\n\t\t\ts.widths.push(width);\r\n\t\t\ts.xPositions.push(xPos);\r\n\t\t\txPos += width;\r\n\t\t});\r\n\t}\r\n\r\n\tmakeDataByIndex() { }\r\n\r\n\tbindTooltip() {\r\n\t\tlet s = this.state;\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tlet bars = this.components.get('percentageBars').store;\r\n\t\t\tlet bar = e.target;\r\n\t\t\tif(bars.includes(bar)) {\r\n\r\n\t\t\t\tlet i = bars.indexOf(bar);\r\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\r\n\r\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\r\n\t\t\t\tlet y = pOff.top - gOff.top;\r\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\r\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\r\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\r\n\r\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\r\n\t\t\t\tthis.tip.showTip();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import AggregationChart from './AggregationChart';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { getOffset } from '../utils/dom';\r\nimport { getPositionByAngle } from '../utils/helpers';\r\nimport { makeArcPathStr } from '../utils/draw';\r\nimport { lightenDarkenColor } from '../utils/colors';\r\nimport { transform } from '../utils/animation';\r\nimport { FULL_ANGLE } from '../utils/constants';\r\n\r\nexport default class PieChart extends AggregationChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t\tthis.type = 'pie';\r\n\t\tthis.initTimeout = 0;\r\n\t\tthis.init = 1;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tconfigure(args) {\r\n\t\tsuper.configure(args);\r\n\t\tthis.mouseMove = this.mouseMove.bind(this);\r\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\r\n\r\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\r\n\t\tthis.config.startAngle = args.startAngle || 0;\r\n\r\n\t\tthis.clockWise = args.clockWise || false;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tsuper.calc();\r\n\t\tlet s = this.state;\r\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\r\n\r\n\t\tconst { radius, clockWise } = this;\r\n\r\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\r\n\t\ts.sliceStrings = [];\r\n\t\ts.slicesProperties = [];\r\n\t\tlet curAngle = 180 - this.config.startAngle;\r\n\r\n\t\ts.sliceTotals.map((total, i) => {\r\n\t\t\tconst startAngle = curAngle;\r\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\r\n\t\t\tlet largeArc = 0;\r\n\t\t\tif(originDiffAngle > 180){\r\n\t\t\t\tlargeArc = 1;\r\n\t\t\t}\r\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\r\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\r\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\r\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\r\n\r\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\r\n\r\n\t\t\tlet curStart,curEnd;\r\n\t\t\tif(this.init) {\r\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\r\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\r\n\t\t\t} else {\r\n\t\t\t\tcurStart = startPosition;\r\n\t\t\t\tcurEnd = endPosition;\r\n\t\t\t}\r\n\t\t\tconst curPath = makeArcPathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\r\n\r\n\t\t\ts.sliceStrings.push(curPath);\r\n\t\t\ts.slicesProperties.push({\r\n\t\t\t\tstartPosition,\r\n\t\t\t\tendPosition,\r\n\t\t\t\tvalue: total,\r\n\t\t\t\ttotal: s.grandTotal,\r\n\t\t\t\tstartAngle,\r\n\t\t\t\tendAngle,\r\n\t\t\t\tangle: diffAngle\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\tthis.init = 0;\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'pieSlices',\r\n\t\t\t\t{ },\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\r\n\t\t\t\t\t\tcolors: this.colors\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tcalTranslateByAngle(property){\r\n\t\tconst{radius,hoverRadio} = this;\r\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\r\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\r\n\t}\r\n\r\n\thoverSlice(path,i,flag,e){\r\n\t\tif(!path) return;\r\n\t\tconst color = this.colors[i];\r\n\t\tif(flag) {\r\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\r\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\r\n\t\t\tlet g_off = getOffset(this.svg);\r\n\t\t\tlet x = e.pageX - g_off.left + 10;\r\n\t\t\tlet y = e.pageY - g_off.top - 10;\r\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\r\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\r\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\r\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\r\n\t\t\tthis.tip.showTip();\r\n\t\t} else {\r\n\t\t\ttransform(path,'translate3d(0,0,0)');\r\n\t\t\tthis.tip.hideTip();\r\n\t\t\tpath.style.fill = color;\r\n\t\t}\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\r\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\r\n\t}\r\n\r\n\tmouseMove(e){\r\n\t\tconst target = e.target;\r\n\t\tlet slices = this.components.get('pieSlices').store;\r\n\t\tlet prevIndex = this.curActiveSliceIndex;\r\n\t\tlet prevAcitve = this.curActiveSlice;\r\n\t\tif(slices.includes(target)) {\r\n\t\t\tlet i = slices.indexOf(target);\r\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\r\n\t\t\tthis.curActiveSlice = target;\r\n\t\t\tthis.curActiveSliceIndex = i;\r\n\t\t\tthis.hoverSlice(target, i, true, e);\r\n\t\t} else {\r\n\t\t\tthis.mouseLeave();\r\n\t\t}\r\n\t}\r\n\r\n\tmouseLeave(){\r\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { makeText, heatSquare } from '../utils/draw';\r\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\r\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\r\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\r\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\r\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\r\n\r\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\r\nconst ROW_HEIGHT = COL_WIDTH;\r\n// const DAY_INCR = 1;\r\n\r\nexport default class Heatmap extends BaseChart {\r\n\tconstructor(parent, options) {\r\n\t\tsuper(parent, options);\r\n\t\tthis.type = 'heatmap';\r\n\r\n\t\tthis.countLabel = options.countLabel || '';\r\n\r\n\t\tlet validStarts = ['Sunday', 'Monday'];\r\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\r\n\t\t\t? options.startSubDomain : 'Sunday';\r\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures(options) {\r\n\t\tlet m = this.measures;\r\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\r\n\r\n\t\tm.paddings.top = ROW_HEIGHT * 3;\r\n\t\tm.paddings.bottom = 0;\r\n\t\tm.legendHeight = ROW_HEIGHT * 2;\r\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\r\n\t\t\t+ getExtraHeight(m);\r\n\r\n\t\tlet d = this.data;\r\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\r\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\r\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\r\n\t}\r\n\r\n\tupdateWidth() {\r\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\r\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\r\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\r\n\t\t\t+ getExtraWidth(this.measures);\r\n\t}\r\n\r\n\tprepareData(data=this.data) {\r\n\t\tif(data.start && data.end && data.start > data.end) {\r\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\r\n\t\t}\r\n\r\n\t\tif(!data.start) {\r\n\t\t\tdata.start = new Date();\r\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\r\n\t\t}\r\n\t\tif(!data.end) { data.end = new Date(); }\r\n\t\tdata.dataPoints = data.dataPoints || {};\r\n\r\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\r\n\t\t\tlet points = {};\r\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\r\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\r\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\r\n\t\t\t});\r\n\t\t\tdata.dataPoints = points;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tlet s = this.state;\r\n\r\n\t\ts.start = clone(this.data.start);\r\n\t\ts.end = clone(this.data.end);\r\n\r\n\t\ts.firstWeekStart = clone(s.start);\r\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\r\n\t\ts.distribution = calcDistribution(\r\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\r\n\r\n\t\ts.domainConfigs = this.getDomains();\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\r\n\r\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\r\n\t\t\t'heatDomain',\r\n\t\t\t{\r\n\t\t\t\tindex: config.index,\r\n\t\t\t\tcolWidth: COL_WIDTH,\r\n\t\t\t\trowHeight: ROW_HEIGHT,\r\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\r\n\t\t\t\txTranslate: s.domainConfigs\r\n\t\t\t\t\t.filter((config, j) => j < i)\r\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\r\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\r\n\t\t\t\t\t* COL_WIDTH\r\n\t\t\t},\r\n\t\t\tfunction() {\r\n\t\t\t\treturn s.domainConfigs[i];\r\n\t\t\t}.bind(this)\r\n\r\n\t\t]);\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map((args, i) => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0] + '-' + i, component];\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tlet y = 0;\r\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\r\n\t\t\tif([1, 3, 5].includes(i)) {\r\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\r\n\t\t\t\t\t\tdy: 8,\r\n\t\t\t\t\t\ttextAnchor: 'end'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.drawArea.appendChild(dayText);\r\n\t\t\t}\r\n\t\t\ty += ROW_HEIGHT;\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(data) {\r\n\t\tif(!data) {\r\n\t\t\tconsole.error('No data to update.');\r\n\t\t}\r\n\r\n\t\tthis.data = this.prepareData(data);\r\n\t\tthis.draw();\r\n\t\tthis.bindTooltip();\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tthis.components.forEach(comp => {\r\n\t\t\t\tlet daySquares = comp.store;\r\n\t\t\t\tlet daySquare = e.target;\r\n\t\t\t\tif(daySquares.includes(daySquare)) {\r\n\r\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\r\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\r\n\r\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\r\n\r\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\r\n\r\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\r\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\r\n\t\t\t\t\tlet y = pOff.top - gOff.top;\r\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\r\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\r\n\r\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\r\n\t\t\t\t\tthis.tip.showTip();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tthis.legendArea.textContent = '';\r\n\t\tlet x = 0;\r\n\t\tlet y = ROW_HEIGHT;\r\n\r\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\r\n\t\t\t{\r\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\r\n\t\t\t\tdy: 9\r\n\t\t\t}\r\n\t\t);\r\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\r\n\t\tthis.legendArea.appendChild(lessText);\r\n\r\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\r\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\r\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, color);\r\n\t\t\tthis.legendArea.appendChild(square);\r\n\t\t});\r\n\r\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\r\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\r\n\t\t\t{\r\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\r\n\t\t\t\tdy: 9\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.legendArea.appendChild(moreText);\r\n\t}\r\n\r\n\tgetDomains() {\r\n\t\tlet s = this.state;\r\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\r\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\r\n\r\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\r\n\r\n\t\tlet domainConfigs = [];\r\n\r\n\t\tlet startOfMonth = clone(s.start);\r\n\t\tfor(var i = 0; i < noOfMonths; i++) {\r\n\t\t\tlet endDate = s.end;\r\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\r\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\r\n\t\t\t\tendDate = getLastDateInMonth(month, year);\r\n\t\t\t}\r\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\r\n\r\n\t\t\taddDays(endDate, 1);\r\n\t\t\tstartOfMonth = endDate;\r\n\t\t}\r\n\r\n\t\treturn domainConfigs;\r\n\t}\r\n\r\n\tgetDomainConfig(startDate, endDate='') {\r\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\r\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\r\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\r\n\r\n\t\tlet domainConfig = {\r\n\t\t\tindex: month,\r\n\t\t\tcols: []\r\n\t\t};\r\n\r\n\t\taddDays(endDate, 1);\r\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\r\n\r\n\t\tlet cols = [], col;\r\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\r\n\t\t\tcol = this.getCol(startOfWeek, month);\r\n\t\t\tcols.push(col);\r\n\r\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\r\n\t\t\taddDays(startOfWeek, 1);\r\n\t\t}\r\n\r\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\r\n\t\t\taddDays(startOfWeek, 1);\r\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\r\n\t\t}\r\n\r\n\t\tdomainConfig.cols = cols;\r\n\r\n\t\treturn domainConfig;\r\n\t}\r\n\r\n\tgetCol(startDate, month, empty = false) {\r\n\t\tlet s = this.state;\r\n\r\n\t\t// startDate is the start of week\r\n\t\tlet currentDate = clone(startDate);\r\n\t\tlet col = [];\r\n\r\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\r\n\t\t\tlet config = {};\r\n\r\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\r\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\r\n\r\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\r\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\r\n\t\t\t} else {\r\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\r\n\t\t\t}\r\n\t\t\tcol.push(config);\r\n\t\t}\r\n\r\n\t\treturn col;\r\n\t}\r\n\r\n\tgetSubDomainConfig(date) {\r\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\r\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\r\n\t\tlet config = {\r\n\t\t\tyyyyMmDd: yyyyMmDd,\r\n\t\t\tdataValue: dataValue || 0,\r\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\r\n\t\t};\r\n\t\treturn config;\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\r\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { getOffset, fire } from '../utils/dom';\r\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\r\nimport { floatTwo } from '../utils/helpers';\r\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\r\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\r\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\r\n\r\nexport default class AxisChart extends BaseChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\r\n\t\tthis.barOptions = args.barOptions || {};\r\n\t\tthis.lineOptions = args.lineOptions || {};\r\n\r\n\t\tthis.type = args.type || 'line';\r\n\t\tthis.init = 1;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures() {\r\n\t\tif(this.data.datasets.length <= 1) {\r\n\t\t\tthis.config.showLegend = 0;\r\n\t\t\tthis.measures.paddings.bottom = 30;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigure(options) {\r\n\t\tsuper.configure(options);\r\n\r\n\t\toptions.axisOptions = options.axisOptions || {};\r\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\r\n\r\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\r\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\r\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\r\n\r\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\r\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\r\n\r\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\r\n\t}\r\n\r\n\tprepareData(data=this.data) {\r\n\t\treturn dataPrep(data, this.type);\r\n\t}\r\n\r\n\tprepareFirstData(data=this.data) {\r\n\t\treturn zeroDataPrep(data);\r\n\t}\r\n\r\n\tcalc(onlyWidthChange = false) {\r\n\t\tthis.calcXPositions();\r\n\t\tif(!onlyWidthChange) {\r\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\r\n\t\t}\r\n\t\tthis.makeDataByIndex();\r\n\t}\r\n\r\n\tcalcXPositions() {\r\n\t\tlet s = this.state;\r\n\t\tlet labels = this.data.labels;\r\n\t\ts.datasetLength = labels.length;\r\n\r\n\t\ts.unitWidth = this.width/(s.datasetLength);\r\n\t\t// Default, as per bar, and mixed. Only line will be a special case\r\n\t\ts.xOffset = s.unitWidth/2;\r\n\r\n\t\t// // For a pure Line Chart\r\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\r\n\t\t// s.xOffset = 0;\r\n\r\n\t\ts.xAxis = {\r\n\t\t\tlabels: labels,\r\n\t\t\tpositions: labels.map((d, i) =>\r\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\r\n\t\t\t)\r\n\t\t};\r\n\t}\r\n\r\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\r\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\r\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\r\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\r\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\r\n\r\n\t\tthis.state.yAxis = {\r\n\t\t\tlabels: yPts,\r\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\r\n\t\t\tscaleMultiplier: scaleMultiplier,\r\n\t\t\tzeroLine: zeroLine,\r\n\t\t};\r\n\r\n\t\t// Dependent if above changes\r\n\t\tthis.calcDatasetPoints();\r\n\t\tthis.calcYExtremes();\r\n\t\tthis.calcYRegions();\r\n\t}\r\n\r\n\tcalcDatasetPoints() {\r\n\t\tlet s = this.state;\r\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\r\n\r\n\t\ts.datasets = this.data.datasets.map((d, i) => {\r\n\t\t\tlet values = d.values;\r\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\r\n\t\t\treturn {\r\n\t\t\t\tname: d.name,\r\n\t\t\t\tindex: i,\r\n\t\t\t\tchartType: d.chartType,\r\n\r\n\t\t\t\tvalues: values,\r\n\t\t\t\tyPositions: scaleAll(values),\r\n\r\n\t\t\t\tcumulativeYs: cumulativeYs,\r\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tcalcYExtremes() {\r\n\t\tlet s = this.state;\r\n\t\tif(this.barOptions.stacked) {\r\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\r\n\t\ts.datasets.map(d => {\r\n\t\t\td.yPositions.map((pos, j) => {\r\n\t\t\t\tif(pos < s.yExtremes[j]) {\r\n\t\t\t\t\ts.yExtremes[j] = pos;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tcalcYRegions() {\r\n\t\tlet s = this.state;\r\n\t\tif(this.data.yMarkers) {\r\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\r\n\t\t\t\td.position = scale(d.value, s.yAxis);\r\n\t\t\t\tif(!d.options) d.options = {};\r\n\t\t\t\t// if(!d.label.includes(':')) {\r\n\t\t\t\t// \td.label += ': ' + d.value;\r\n\t\t\t\t// }\r\n\t\t\t\treturn d;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.data.yRegions) {\r\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\r\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\r\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\r\n\t\t\t\tif(!d.options) d.options = {};\r\n\t\t\t\treturn d;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetAllYValues() {\r\n\t\tlet key = 'values';\r\n\r\n\t\tif(this.barOptions.stacked) {\r\n\t\t\tkey = 'cumulativeYs';\r\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\r\n\t\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\t\tlet values = this.data.datasets[i].values;\r\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\r\n\t\tif(this.data.yMarkers) {\r\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\r\n\t\t}\r\n\t\tif(this.data.yRegions) {\r\n\t\t\tthis.data.yRegions.map(d => {\r\n\t\t\t\tallValueLists.push([d.end, d.start]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn [].concat(...allValueLists);\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'yAxis',\r\n\t\t\t\t{\r\n\t\t\t\t\tmode: this.config.yAxisMode,\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\t// pos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yAxis;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t'xAxis',\r\n\t\t\t\t{\r\n\t\t\t\t\tmode: this.config.xAxisMode,\r\n\t\t\t\t\theight: this.height,\r\n\t\t\t\t\t// pos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\r\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\r\n\r\n\t\t\t\t\treturn s.xAxis;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t'yRegions',\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\tpos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yRegions;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\t\t];\r\n\r\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\r\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\r\n\r\n\t\tlet barsConfigs = barDatasets.map(d => {\r\n\t\t\tlet index = d.index;\r\n\t\t\treturn [\r\n\t\t\t\t'barGraph' + '-' + d.index,\r\n\t\t\t\t{\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tcolor: this.colors[index],\r\n\t\t\t\t\tstacked: this.barOptions.stacked,\r\n\r\n\t\t\t\t\t// same for all datasets\r\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\r\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\tlet d = s.datasets[index];\r\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\r\n\r\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\r\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\r\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\r\n\r\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\r\n\t\t\t\t\tif(!stacked) {\r\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\r\n\t\t\t\t\tif(this.config.valuesOverPoints) {\r\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\r\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabels = d.values;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\r\n\t\t\t\t\tif(stacked) {\r\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: xPositions,\r\n\t\t\t\t\t\tyPositions: d.yPositions,\r\n\t\t\t\t\t\toffsets: offsets,\r\n\t\t\t\t\t\t// values: d.values,\r\n\t\t\t\t\t\tlabels: labels,\r\n\r\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\r\n\t\t\t\t\t\tbarsWidth: barsWidth,\r\n\t\t\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tlet lineConfigs = lineDatasets.map(d => {\r\n\t\t\tlet index = d.index;\r\n\t\t\treturn [\r\n\t\t\t\t'lineGraph' + '-' + d.index,\r\n\t\t\t\t{\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tcolor: this.colors[index],\r\n\t\t\t\t\tsvgDefs: this.svgDefs,\r\n\t\t\t\t\theatline: this.lineOptions.heatline,\r\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\r\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\r\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\r\n\r\n\t\t\t\t\t// same for all datasets\r\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\tlet d = s.datasets[index];\r\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\r\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: s.xAxis.positions,\r\n\t\t\t\t\t\tyPositions: d.yPositions,\r\n\r\n\t\t\t\t\t\tvalues: d.values,\r\n\r\n\t\t\t\t\t\tzeroLine: minLine,\r\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tlet markerConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'yMarkers',\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\tpos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yMarkers;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\r\n\r\n\t\tlet optionals = ['yMarkers', 'yRegions'];\r\n\t\tthis.dataUnitComponents = [];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\r\n\t\t\t\t\tthis.dataUnitComponents.push(component);\r\n\t\t\t\t}\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tmakeDataByIndex() {\r\n\t\tthis.dataByIndex = {};\r\n\r\n\t\tlet s = this.state;\r\n\t\tlet formatX = this.config.formatTooltipX;\r\n\t\tlet formatY = this.config.formatTooltipY;\r\n\t\tlet titles = s.xAxis.labels;\r\n\r\n\t\ttitles.map((label, index) => {\r\n\t\t\tlet values = this.state.datasets.map((set, i) => {\r\n\t\t\t\tlet value = set.values[index];\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: set.name,\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tyPos: set.yPositions[index],\r\n\t\t\t\t\tcolor: this.colors[i],\r\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.dataByIndex[index] = {\r\n\t\t\t\tlabel: label,\r\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\r\n\t\t\t\txPos: s.xAxis.positions[index],\r\n\t\t\t\tvalues: values,\r\n\t\t\t\tyExtreme: s.yExtremes[index],\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tlet m = this.measures;\r\n\t\t\tlet o = getOffset(this.container);\r\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\r\n\t\t\tlet relY = e.pageY - o.top;\r\n\r\n\t\t\tif(relY < this.height + getTopOffset(m)\r\n\t\t\t\t&& relY >  getTopOffset(m)) {\r\n\t\t\t\tthis.mapTooltipXPosition(relX);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tip.hideTip();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tmapTooltipXPosition(relX) {\r\n\t\tlet s = this.state;\r\n\t\tif(!s.yExtremes) return;\r\n\r\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\r\n\t\tlet dbi = this.dataByIndex[index];\r\n\r\n\t\tthis.tip.setValues(\r\n\t\t\tdbi.xPos + this.tip.offset.x,\r\n\t\t\tdbi.yExtreme + this.tip.offset.y,\r\n\t\t\t{name: dbi.formattedLabel, value: ''},\r\n\t\t\tdbi.values,\r\n\t\t\tindex\r\n\t\t);\r\n\r\n\t\tthis.tip.showTip();\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tlet s = this.data;\r\n\t\tif(s.datasets.length > 1) {\r\n\t\t\tthis.legendArea.textContent = '';\r\n\t\t\ts.datasets.map((d, i) => {\r\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\r\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\r\n\t\t\t\t// let multiplier = s.datasets.length - i;\r\n\t\t\t\tlet rect = legendBar(\r\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\r\n\t\t\t\t\tbarWidth * i,\r\n\t\t\t\t\t'0',\r\n\t\t\t\t\tbarWidth,\r\n\t\t\t\t\tthis.colors[i],\r\n\t\t\t\t\td.name);\r\n\t\t\t\tthis.legendArea.appendChild(rect);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t// Overlay\r\n\tmakeOverlay() {\r\n\t\tif(this.init) {\r\n\t\t\tthis.init = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.overlayGuides) {\r\n\t\t\tthis.overlayGuides.forEach(g => {\r\n\t\t\t\tlet o = g.overlay;\r\n\t\t\t\to.parentNode.removeChild(o);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\r\n\t\t\treturn {\r\n\t\t\t\ttype: c.unitType,\r\n\t\t\t\toverlay: undefined,\r\n\t\t\t\tunits: c.units,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tif(this.state.currentIndex === undefined) {\r\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\r\n\t\t}\r\n\r\n\t\t// Render overlays\r\n\t\tthis.overlayGuides.map(d => {\r\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\r\n\r\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\r\n\t\t\tthis.drawArea.appendChild(d.overlay);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateOverlayGuides() {\r\n\t\tif(this.overlayGuides) {\r\n\t\t\tthis.overlayGuides.forEach(g => {\r\n\t\t\t\tlet o = g.overlay;\r\n\t\t\t\to.parentNode.removeChild(o);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tbindOverlay() {\r\n\t\tthis.parent.addEventListener('data-select', () => {\r\n\t\t\tthis.updateOverlay();\r\n\t\t});\r\n\t}\r\n\r\n\tbindUnits() {\r\n\t\tthis.dataUnitComponents.map(c => {\r\n\t\t\tc.units.map(unit => {\r\n\t\t\t\tunit.addEventListener('click', () => {\r\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\r\n\t\t\t\t\tthis.setCurrentDataPoint(index);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\r\n\t\tthis.tip.container.addEventListener('click', () => {\r\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\r\n\t\t\tthis.setCurrentDataPoint(index);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateOverlay() {\r\n\t\tthis.overlayGuides.map(d => {\r\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\r\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\r\n\t\t});\r\n\t}\r\n\r\n\tonLeftArrow() {\r\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\r\n\t}\r\n\r\n\tonRightArrow() {\r\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\r\n\t}\r\n\r\n\tgetDataPoint(index=this.state.currentIndex) {\r\n\t\tlet s = this.state;\r\n\t\tlet data_point = {\r\n\t\t\tindex: index,\r\n\t\t\tlabel: s.xAxis.labels[index],\r\n\t\t\tvalues: s.datasets.map(d => d.values[index])\r\n\t\t};\r\n\t\treturn data_point;\r\n\t}\r\n\r\n\tsetCurrentDataPoint(index) {\r\n\t\tlet s = this.state;\r\n\t\tindex = parseInt(index);\r\n\t\tif(index < 0) index = 0;\r\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\r\n\t\tif(index === s.currentIndex) return;\r\n\t\ts.currentIndex = index;\r\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\r\n\t}\r\n\r\n\r\n\r\n\t// API\r\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\r\n\t\tsuper.addDataPoint(label, datasetValues, index);\r\n\t\tthis.data.labels.splice(index, 0, label);\r\n\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\td.values.splice(index, 0, datasetValues[i]);\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\tremoveDataPoint(index = this.state.datasetLength-1) {\r\n\t\tif (this.data.labels.length <= 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsuper.removeDataPoint(index);\r\n\t\tthis.data.labels.splice(index, 1);\r\n\t\tthis.data.datasets.map(d => {\r\n\t\t\td.values.splice(index, 1);\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\tupdateDataset(datasetValues, index=0) {\r\n\t\tthis.data.datasets[index].values = datasetValues;\r\n\t\tthis.update(this.data);\r\n\t}\r\n\t// addDataset(dataset, index) {}\r\n\t// removeDataset(index = 0) {}\r\n\r\n\tupdateDatasets(datasets) {\r\n\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\tif(datasets[i]) {\r\n\t\t\t\td.values = datasets[i];\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\t// updateDataPoint(dataPoint, index = 0) {}\r\n\t// addDataPoint(dataPoint, index = 0) {}\r\n\t// removeDataPoint(index = 0) {}\r\n}\r\n"],"names":["$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","slice","num","parseInt","b","g","toString","isValidColor","test","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","undefined","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","key","legendBar","label","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","l","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","xList","yList","pointsStr","join","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","push","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","a","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","innerHTML","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getTime","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","reduce","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","error","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","HEATMAP_COLORS_GREEN","DEFAULT_COLORS","PI","FULL_ANGLE","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BOUND_DRAW_FN","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","bind","draw","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","c","_this","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","animate","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this3","event","keyCode","chartSvg","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","divisor","NO_OF_YEAR_MONTHS","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this4","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","barWidth","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","COL_WIDTH","ROW_HEIGHT","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","points","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","moreText","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","Chart"],"mappings":"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"}